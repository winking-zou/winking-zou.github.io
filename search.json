[{"title":"基于实时深度学习的推荐系统架构设计和技术演进","url":"/2021/07/17/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E4%BA%8E%E5%AE%9E%E6%97%B6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%92%8C%E6%8A%80%E6%9C%AF%E6%BC%94%E8%BF%9B/","content":"<h1 id=\"一、实时推荐系统的原理\"><a href=\"#一、实时推荐系统的原理\" class=\"headerlink\" title=\"一、实时推荐系统的原理\"></a>一、实时推荐系统的原理</h1><p>在介绍实时推荐系统的原理之前，先来看一个传统、经典的静态推荐系统。</p>\n<p>用户的行为日志会出现在消息队列里，然后被ETL到特征生成和模型训练中。这部分的数据是离线的，离线的模型更新和特征更新会被推到在线系统里面，比如特征库和在线推理的服务中，然后去服务在线的搜索推广应用。这个推荐系统本身是一个服务，前端展示的服务推广应用可能有搜索推荐、广告推荐等。那么这个静态系统到底是怎么工作的？我们来看下面的例子。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"静态推荐系统\"><a href=\"#静态推荐系统\" class=\"headerlink\" title=\"静态推荐系统\"></a>静态推荐系统</h2><p><img src=\"/2021/07/17/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E4%BA%8E%E5%AE%9E%E6%97%B6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%92%8C%E6%8A%80%E6%9C%AF%E6%BC%94%E8%BF%9B/d81d11ccdec5497791b8a043756b12b5-6457732.png\" alt=\"基于实时深度学习的推荐系统架构设计和技术演进\"></p>\n<p>截取现在用户的行为日志，倒入离线系统中去做特征生成和模型训练，这段日志表示用户 1 和用户 2 同时浏览了 page#200 这个页面和其他一些页面，其中用户 1 浏览了 page#100 并且点击了 ads#2002。那么这个日志会被 ETL 到离线，然后送去做特征生成和模型训练。生成的特征和模型里面会看到，用户 1 和用户 2 都是中国男性用户，“中国男性”是这两个用户的一个特征，这个学习模型最终结果是：中国男性用户浏览了 page#100 的时候，需要给他推 ads#2002。这里面的逻辑就是把相似用户的行为归到一起，说明这类用户应该有同样的行为。</p>\n<p>用户特征推进特征库建立的模型，在推送至在线服务里的时候如果有一个用户 4 出现，在线推理的服务就会到特征库里面去查这个用户的特征，查到的特征可能是这个用户正好是中国的男性用户，模型之前学到了中国男性用户访问 page#100 时候要推 ads#2002，所以会根据学习模型给用户 4 推荐了 ads#2002。以上就是静态推荐系统的基本工作流程。</p>\n<p>但是这个系统也有一些问题，比如第一天的模型训练完成后，发现用户 4 第二天的行为其实跟用户 3 更像，不是和用户 1、用户 2 类似 。但是之前模型训练的结果是中国男性用户访问 page#100 时候要推 ads#2002，并且会默认进行这种推荐。只有经过第二次模型计算后才能发现用户 4 和用户 3 比较像，这时再进行新的推荐，是有延迟的。这是因为模型和特征都是静态的。</p>\n<p>对于静态推荐系统来讲，特征和模型都是静态生成的。比如以分类模型为例，根据用户的相似度进行分类，然后假设同类用户都有相似的行为兴趣和特征，一旦用户被化成了某一类，那么他就一直在这个类别中，直到模型被重新训练。</p>\n<h2 id=\"静态推荐系统问题\"><a href=\"#静态推荐系统问题\" class=\"headerlink\" title=\"静态推荐系统问题\"></a>静态推荐系统问题</h2><ul>\n<li>第一，用户行为其实是非常多元化的，没有办法用一个静态的事情去描述这个用户的行为。</li>\n<li>第二，某一类用户的行为可能比较相似，但是行为本身发生了变化。例如中国男性用户访问page#100时候要推ads#2002，这是昨天的行为规律；但是到了第二天的时候发现不是所有的中国男性用户看到page#100时候都会点击ads#2002。</li>\n</ul>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><h3 id=\"加入实时特征工程后能够灵活推荐\"><a href=\"#加入实时特征工程后能够灵活推荐\" class=\"headerlink\" title=\"加入实时特征工程后能够灵活推荐\"></a>加入实时特征工程后能够灵活推荐</h3><p>在推荐系统中加入实时特征工程，把消息队列里面的消息读一份出来，然后去做近线的特征生成。举个例子，中国男性用户最近访问 page#100 的时候点击最多的 10 个广告，这件事情是实时去追踪的。就是说中国男性用户最近 10 分钟或者半个小时之内访问 page#100 的时候点的最多 10 个广告，个事情不是从昨天的历史数据里面得到的信息，而是今天的用户实时行为的数据，这就是实时特征。</p>\n<p><img src=\"/2021/07/17/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E4%BA%8E%E5%AE%9E%E6%97%B6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%92%8C%E6%8A%80%E6%9C%AF%E6%BC%94%E8%BF%9B/ab499505e1854114b862cab4f758d9ef-6493950.png\" alt=\"基于实时深度学习的推荐系统架构设计和技术演进\"></p>\n<p>有了这个实时特征以后，就能解决刚才那个随大流的问题。同样的，如果这里的特征是对某一个用户最近 3 分钟或者 5 分钟的行为采集的，就能够更加准确的追踪到这个用户当时当刻的意图，并且给这个用户去做更准确的推荐。</p>\n<p>所以说，在推荐系统中加入实时特征后能精准推荐。比如刚才的例子，如果用户 4 在这个情况下访问 page#100，新的学习内容为：中国男性用户最近访问 page#100 的时候，点的最多的是 ads#2001。那我们会直接推荐 ads#2001，而不是按照昨天的信息给他推 ads#2002。</p>\n<h3 id=\"实时特征推荐体系的局限性\"><a href=\"#实时特征推荐体系的局限性\" class=\"headerlink\" title=\"实时特征推荐体系的局限性\"></a>实时特征推荐体系的局限性</h3><p>之前的用户 1 和用户 2 的行为是非常相似的，加了实时特征就能知道它当前的意图。但是，如果用户 1 和用户 2 在做相同的特征时，他们的行为产生了不一致；也就是说在模型里面被认为是同一类的用户，他们的行为产生分化了，变成了两类用户。如果是静态的模型，即使加入了实时特征，也无法发现这一类新的用户；需要对模型进行重新训练以后，才能够产生一个新的分类。</p>\n<p>加入实施特征工程推荐系统后，可以追踪某一类用户的行为，贴合一个大流的变化；也可以实时追踪用户的表现，了解用户当时的意图。但是当模型本身的分类方式发生变化的时候，就没有办法找到最合适的分类了，需要重新对训练模型进行分类，这种情况会遇到很多。</p>\n<p>比如说当有很多新产品上线时，业务在高速增长，每天都会产生很多的新用户，或者说用户行为分布变化得比较快。这种情况下即使使用了实时特征系统，由于模型本身是一个逐渐退化的过程，也会导致昨天训练的模型今天再放到线上去，不一定能够 work 的很好。</p>\n<h3 id=\"解决方案-1\"><a href=\"#解决方案-1\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><p>在推荐系统中新增两个部分：近线训练和近线样本生成。</p>\n<p>假设有用户 1 和用户 2 分别是上海和北京的用户，这个时候会发现之前的模型不知道上海和北京的用户是有区别的，它认为都是中国男性用户。而在加入实时训练这个模型后，就会逐渐的学习北京的用户和上海的用户，两者的行为是有区别的，确认这一点后再进行推荐就会有不一样的效果。</p>\n<p>再比如说，今天北京突然下暴雨了或者上海天气特别热，这个时候都会导致两边用户的行为不太一样。这时再有一个用户 4 过来，模型就会分辨这个用户是上海还是北京的用户。如果他是上海的用户，可能就会推荐上海用户所对应的内容；如果不是的话，可以继续推荐别的。</p>\n<p>加入实时模型训练，最主要的目的是在动态特征的基础上，希望模型本身能够尽可能的贴合此时此刻用户行为的分布，同时希望能够缓解模型的退化。</p>\n<h1 id=\"二、阿里巴巴实时推荐方案\"><a href=\"#二、阿里巴巴实时推荐方案\" class=\"headerlink\" title=\"二、阿里巴巴实时推荐方案\"></a>二、阿里巴巴实时推荐方案</h1><p>首先了解下阿里内部实施完这套方案之后有什么好处：</p>\n<ul>\n<li><p>第一个是时效性。目前阿里大促开始常态化，在大促期间整个模型的时效性得到了很好的提升；</p>\n</li>\n<li><p>第二个是灵活性。可以根据需求随时调整特征和模型；</p>\n</li>\n<li><p>第三个是可靠性。大家在使用整个实时推荐系统的时候会觉得不放心，没有经过离线当天晚上大规模的计算验证，直接推上线，会觉得不够可靠，其实已经有一套完整的流程去保证这件事情的稳定性和可靠性；</p>\n<p><img src=\"/2021/07/17/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E4%BA%8E%E5%AE%9E%E6%97%B6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%92%8C%E6%8A%80%E6%9C%AF%E6%BC%94%E8%BF%9B/54647c7b80224cf486f72ae6c32cd466-6494045.png\" alt=\"基于实时深度学习的推荐系统架构设计和技术演进\"></p>\n</li>\n</ul>\n<p>这个推荐模型从图上看，从特征到样本到模型，再到在线预测这个过程，和离线其实没有区别。主要的区别就是整个的流程实时化，用这套实时化的流程去服务在线的搜索推广应用。</p>\n<h2 id=\"如何实施\"><a href=\"#如何实施\" class=\"headerlink\" title=\"如何实施\"></a>如何实施</h2><p>根据经典离线架构进行演变。</p>\n<p><img src=\"/2021/07/17/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E4%BA%8E%E5%AE%9E%E6%97%B6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%92%8C%E6%8A%80%E6%9C%AF%E6%BC%94%E8%BF%9B/7f68e64ed1d245f6a993180f890bae4e-6494096.png\" alt=\"基于实时深度学习的推荐系统架构设计和技术演进\"></p>\n<p>首先，用户群行为会从消息队列来走离线存储，然后这个离线存储会存储所有的历史用户行为；然后在这个离线存储上面，通过静态特征计算样本；接下来把样本存到样本存储里，去做离线模型训练；之后把离线的这个模型发布到模型中心，去做模型验证；最后把模型验证过的模型推到推理服务去服务在线业务。这个就是完整的离线体系。</p>\n<p>我们将通过三件事情进行实时化改造：</p>\n<ul>\n<li>第一是特征计算；</li>\n<li>第二是样本生成；</li>\n<li>第三是模型训练。</li>\n</ul>\n<p><img src=\"/2021/07/17/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E4%BA%8E%E5%AE%9E%E6%97%B6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%92%8C%E6%8A%80%E6%9C%AF%E6%BC%94%E8%BF%9B/0252cc654da84524ab0c934ee5f58237-6494113.png\" alt=\"基于实时深度学习的推荐系统架构设计和技术演进\"></p>\n<p>相比之前，消息队列不仅仅存入离线存储，还要分出来两链路：</p>\n<ul>\n<li>第一链路会做实时的特征计算，比如说最近几分钟之内中国男性用户看 page#100 的时候点了什么广告，这个是实时计算算出来的，即最近一段时间的一些用户可能产生的一些行为特征等。</li>\n<li>另外一条链路是消息队列，可以进行实时样本拼接，就是说不需要手动去打标签，因为用户自己会告诉我们标签。比如我们做了一个推荐，如果用户点击了，那么它一定是个正样本；如果过了一段时间用户没有点击，那我们认为它就是个负样本。所以不用人工去打标签，用户会帮我们打标签，这个时候很容易就能够得到样本，然后这部分样本会放到样本存储里面去，这个跟之前是一样的。区别在于这个样本存储不仅服务离线的模型训练，还会去做实时的模型训练。</li>\n</ul>\n<p>离线模型训练通常还是天级的 T+1 的，会训练出一个 base model ，交给实时模型训练去做增量的训练。增量模型训练的模型产出就可能是 10 分钟、15 分钟这样的级别，然后会送到模型存储做模型验证，最后上线。</p>\n<p>架构图中绿色的部分都是实时的，这部分有一些是新加出来的，有一些则是由原本的离线变成实时的。</p>\n<h2 id=\"阿里云企业级实时推荐解决方案\"><a href=\"#阿里云企业级实时推荐解决方案\" class=\"headerlink\" title=\"阿里云企业级实时推荐解决方案\"></a>阿里云企业级实时推荐解决方案</h2><p><img src=\"/2021/07/17/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E4%BA%8E%E5%AE%9E%E6%97%B6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%92%8C%E6%8A%80%E6%9C%AF%E6%BC%94%E8%BF%9B/10c92a3a5ce34b219d5fc58e6addd809-6494146.png\" alt=\"基于实时深度学习的推荐系统架构设计和技术演进\"></p>\n<p>在阿里云企业级实时推荐解决方案中，如何使用阿里云产品搭建？</p>\n<p>消息队列会用 DataHub；实时的特征和样本使用实时计算 Flink 版；离线的特征存储和静态特征计算都会用 MaxCompute；特征存储和样本中心使用 MaxCompute 交互式分析（Hologres）；消息队列的部分都是 DataHub；模型训练的部分会用到 PAI，模型存储和验证，还有在线推理服务这一套流程都是 PAI 里面的。</p>\n<h3 id=\"实时特征计算及推理\"><a href=\"#实时特征计算及推理\" class=\"headerlink\" title=\"实时特征计算及推理\"></a>实时特征计算及推理</h3><p><img src=\"/2021/07/17/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E4%BA%8E%E5%AE%9E%E6%97%B6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%92%8C%E6%8A%80%E6%9C%AF%E6%BC%94%E8%BF%9B/7accf2b9b5f241b99b6981eb67ef5969-6494177.png\" alt=\"基于实时深度学习的推荐系统架构设计和技术演进\"></p>\n<p>特征和推理就是把用户日志实时采集过来，导入实时计算 Flink 版里面去做实时特征计算。然后会送到 Hologres 里面去，利用 Hologres 流式的能力，拿它做特征中心。在这里，PAI 可以去直接查询 Hologres 里面的这些用户特征，也就是点查的能力。</p>\n<p>在实时计算 Flink 版计算特征的时候，比如说用户最近 5 分钟的浏览记录，包括商品、文章、视频等，根据不同的业务属性，实时特征是不一样的。也可能包括比如最近 10 分钟每个品类点击率最高的 50 个商品，最近 30 分钟浏览量最高的文章、视频、商品，最近 30 分钟搜索量最高的是 100 个词等。在这不同的场景，比如搜索推荐，有广告、有视频、有文本、有新闻等。这些数据拿来做实时特征计算的和推理的这一条链路，然后在这个链路基础之上，有的时候也是需要静态特征回填的。</p>\n<h3 id=\"静态特征回填\"><a href=\"#静态特征回填\" class=\"headerlink\" title=\"静态特征回填\"></a>静态特征回填</h3><p><img src=\"/2021/07/17/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E4%BA%8E%E5%AE%9E%E6%97%B6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%92%8C%E6%8A%80%E6%9C%AF%E6%BC%94%E8%BF%9B/c716458705c64d07aecb30ea76a5fd7c-6494208.png\" alt=\"基于实时深度学习的推荐系统架构设计和技术演进\"></p>\n<p>比如新上线一个特征，这个新的特征在实时链路上线了之后，如果需要最近 30 天用户的行为，不可能等 30 天之后再计算。于是需要找到离线数据，然后把最近 30 天的这个特征给它补上。这就叫特征回填，也就是 backfill 。通过 MaxCompute 去算这个特征回填一样也是写到 Hologres，同时实施起来也会把新的特征给加上，这是一个新特征的场景。</p>\n<p>当然还有一些其他场景，比如算一些静态特征；再比如可能线上特征有一个 bug 算错了，但是数据已经落到离线去了，这时候对离线特征要做一个纠错，也会用到 backfill 的过程。</p>\n<h3 id=\"实时样本拼接\"><a href=\"#实时样本拼接\" class=\"headerlink\" title=\"实时样本拼接\"></a>实时样本拼接</h3><p><img src=\"/2021/07/17/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E4%BA%8E%E5%AE%9E%E6%97%B6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%92%8C%E6%8A%80%E6%9C%AF%E6%BC%94%E8%BF%9B/8fb47ef913c441619d46661f11dae2ea-6494234.png\" alt=\"基于实时深度学习的推荐系统架构设计和技术演进\"></p>\n<p>实时样本拼接本质上对于推荐场景来讲，就是展示点击流之后，样本获得一个正样本或者负样本。但是这个 label 显然是不够的，还需要有特征，才能够做训练。特征可以从 DataHub 中来，在加入了实时特征以后，样本的特征是时时刻刻在发生变化的。</p>\n<p>举一个例子，做出某一个商品的推荐行为的时候，是早上 10:00，用户的实时特征是他 9:55 到 10:00 的浏览记录。但是当看到这个样本流回来的时候，有可能是 10:15 的时候了。如果说这个样本是一个正样本，当给到用户推荐的商品且他产生了购买行为，这段时间我们是无法看到用户实时特征的。</p>\n<p>因为那个时候的特征已经变成了用户从 10:10 浏览到 10:15 的时候的浏览记录了。但是在做预测的时候，并不是根据这个 5 分钟内的浏览记录来推荐的这个商品，所以需要把当时做推荐的时候所采用的那些特征给它保存下来，在这个样本生成的时候给它加上，这就是 DataHub 在这里的作用。</p>\n<p>当使用 ES 做实时推荐的时候，需要把当时用来做推荐的这些特征保存下来，拿去做这个样本的生成。样本生成后，可以存储到 Hologres 和 MaxCompute 里面去，把实时样本存储到 DataHub 里面。</p>\n<h3 id=\"实时深度学习和-Flink-AI-Flow\"><a href=\"#实时深度学习和-Flink-AI-Flow\" class=\"headerlink\" title=\"实时深度学习和 Flink AI Flow\"></a>实时深度学习和 Flink AI Flow</h3><p><img src=\"/2021/07/17/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E4%BA%8E%E5%AE%9E%E6%97%B6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%92%8C%E6%8A%80%E6%9C%AF%E6%BC%94%E8%BF%9B/14fbb75f1f914f0fa99b6b914121d629-6494261.png\" alt=\"基于实时深度学习的推荐系统架构设计和技术演进\"></p>\n<p>这个部分会有离线训练是以 “天“ 为级别的；也会有在线的实时训练是 “分钟级” 的；有的可以做的比较极致，是按 “秒” 级的。不管是哪边出来的模型，最后都会送到这个模型中去，进行模型的验证以及上线。</p>\n<p>这个其实是一个非常复杂的工作流。首先，静态特征计算是周期性的，也可能是手动的。当需要做 backfill 的时候，有手动触发的一个过程。根据这个模型图能看出它是批的训练，当它训练完了之后，需要到线上去做一个实时模型验证。这个模型验证可能是一个流作业，所以这里是从批到流的一个触发过程，模型是从流作业里面出来的，它是一个 long running 的作业，每 5 分钟产生一个模型，这每 5 分钟的模型也需要送进去做这个模型验证，所以这是一个流触发流动作的过程。</p>\n<p>再比如说这个实时样本拼接，大家都知道 Flink 有一个 watermark 的概念，比如说到某一个时刻往前的数据都到收集齐了，可以去触发一个批的训练，这个时候就会存在一个流作业。当他到了某一个时刻，需要去触发批训练的时候，这个工作流在传统的工作流调度里面是做不到的，因为传统的工作流调度是基于一个叫做 job status change 的过程来做的，也就是作业状态发生变化。</p>\n<p>假设说如果一个作业跑完了并且没有出错，那么这个作业所产生的数据就已经 ready 了，下游对这些数据有依赖的作业就可以跑了。所以简单来说，一个作业跑完了下一个作业延续上继续跑，但是当整个工作流里面只要有一个流作业的存在，那么这整个工作流就跑不了了，因为流作业是跑不完的。</p>\n<p>比如说这个例子的实时计算，数据是不断变化的跑动，但是也会存在随时可能 ready 的，也就是说可能跑到某一个程度的时候数据就 ready 了，但其实作业根本没有跑完。所以需要引入一个工作流，这个工作流我们把它叫做 Flink AI Flow，去解决刚才那个图里面各个作业之间的协同关系这个问题。</p>\n<p><img src=\"/2021/07/17/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E4%BA%8E%E5%AE%9E%E6%97%B6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%92%8C%E6%8A%80%E6%9C%AF%E6%BC%94%E8%BF%9B/26569a273afc49338a613e1247da06f4-6494286.png\" alt=\"基于实时深度学习的推荐系统架构设计和技术演进\"></p>\n<p>Flink AI Flow 本质上是说节点都是一个 logical 的 processing unit，是一个逻辑处理节点，节点和节点之间，不再是上一个作业跑完跑下一个作业的关系了，而是一个 event driven 的 conditions，是一个事件触发的一个概念。</p>\n<p>同样在工作流执行层面，调度器也不再基于作业状态发生变化去做调度动作，而是基于事件的调度。比方说事件调度这个例子，当一个流作业的 water mark 到了的时候，就是说这个时间点之前的所有数据都到全了，可以去触发批作业去跑，并不需要流作业跑完。</p>\n<p>对于每一个作业来讲，通过调度器提作业或者停作业是需要条件的。当这些事件满足一个条件的时候，才会进行调度动作。比如说有一个模型，当模型生成的时候，会满足一个条件，要求调度器把一个 validation 的作业模型验证的作业给拉起来，那这个就是由一个 event 产生了一个 condition，要求 schedule 去做一件事情的过程。</p>\n<p>除此之外，Flink AI Flow 除了调度的服务之外，还提供了三个额外的支持服务来满足整个 AI 工作流语义，分别是元数据服务、通知服务和模型中心。</p>\n<ul>\n<li>元数据服，是帮大家管理数据集和整个工作流里面的一些状态；</li>\n<li>通知服务，是为了满足基于事件调度语义；</li>\n<li>模型中心，是去管理这个模型当中的一些生命周期。</li>\n</ul>\n<h1 id=\"三、实时深度学习训练-PAI-ODL\"><a href=\"#三、实时深度学习训练-PAI-ODL\" class=\"headerlink\" title=\"三、实时深度学习训练 PAI-ODL\"></a>三、实时深度学习训练 PAI-ODL</h1><p><img src=\"/2021/07/17/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E4%BA%8E%E5%AE%9E%E6%97%B6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%92%8C%E6%8A%80%E6%9C%AF%E6%BC%94%E8%BF%9B/52bb61daedbf48e69cda41a5e9c83176-6494326.png\" alt=\"基于实时深度学习的推荐系统架构设计和技术演进\"></p>\n<p>Flink 生成实时样本之后，在 ODL 系统有两个流。</p>\n<ul>\n<li>第一个流是实时流，生成的实时样本送到 stream data source 上面比如像 kafka，在 kafka 中的这个样本会有两个流向，一个是流到 online training 中，另一个是流到 online evaluation 。</li>\n<li>第二个流是离线训练的数据流，拿离线的数据流向数仓来做这种 offline T+1 的 training 。</li>\n</ul>\n<p>在 online training 中支持用户可配置生成模型的频率，比如说用户配置 30 秒或者 1 分钟生成一次模型更新到线上。这个满足在实时推荐场景中，特别是时效性要求高的场景。</p>\n<p>ODL 支持用户设定一些指标来自动判断生成的模型是否部署线上，当 evaluation 这边达到这些指标要求之后，这个模型会自动推上线。因为模型生成的频率非常高，通过人工去干预不太现实。所以需要用户来设定指标，系统自动去判断当指标达到要求，模型自动回推到线上。</p>\n<p>离线流这边有一条线叫 model calibration，也就是模型的校正。离线训练生成 T+1 的模型会对在线训练进行模型的校正。</p>\n<h2 id=\"PAI-ODL-技术点分析\"><a href=\"#PAI-ODL-技术点分析\" class=\"headerlink\" title=\"PAI-ODL 技术点分析\"></a>PAI-ODL 技术点分析</h2><h3 id=\"超大稀疏模型训练\"><a href=\"#超大稀疏模型训练\" class=\"headerlink\" title=\"超大稀疏模型训练\"></a>超大稀疏模型训练</h3><p><img src=\"/2021/07/17/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E4%BA%8E%E5%AE%9E%E6%97%B6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%92%8C%E6%8A%80%E6%9C%AF%E6%BC%94%E8%BF%9B/e0b3b7d0057646d085e2a9e4d25eb733-6494426.png\" alt=\"基于实时深度学习的推荐系统架构设计和技术演进\"></p>\n<p>超大稀疏模型的训练，是推荐搜索广告这类稀疏场景里常用的一个功能。这里实际上是一个典型、传统的深度学习引擎，比如像 TensorFlow，它原生的内部实现的就是 fix size 这种固定 size variable，在稀疏场景使用中会有一些常见问题。</p>\n<p>就像 static shape，比如在通常的场景里边，像手机 APP 这种，每天都会有新用户来加入，每天也会有新的商品，新闻和新的视频等更新。如果是一个固定大小的 shape 的话，其实是无法表达稀疏场景中这种变化的语义的。而且这个 static shape 会限制模型本身长期的增量训练。如果说一个模型可增量训练时长是一两年，那很可能之前设定的这个大小已经远远不能满足业务需求，有可能带来严重的特征冲突，影响模型的效果。</p>\n<p>如果在实际的模型中设置的 static shape 比较大，但是利用率很低，就会造成内存的浪费，还有一些无效的 IO。包括生成全量模型的时候，造成磁盘的浪费。</p>\n<p>在 PAI-ODL 中基于 PAI-TF 引擎，PAI-TF 提供了 embedding variable 功能。这个功能提供动态的弹性特征的能力。每个新的特征会新增加一个 slot。并支持特征淘汰，比如说下架一个商品，对应的特征就会被删掉。</p>\n<p>增量模型是说可以把一分钟内稀疏特征变化的部分记录下来，产生到这个增量模型中。增量模型记录了稀疏的变化的特征和全量 Dense 的参数。</p>\n<p>基于增量模型的导出，就可以实现 ODL 场景下模型的快速更新。快速更新的增量模型是非常小的，可以做到频繁的模型上线。</p>\n<h3 id=\"支持秒级的模型热更新\"><a href=\"#支持秒级的模型热更新\" class=\"headerlink\" title=\"支持秒级的模型热更新\"></a>支持秒级的模型热更新</h3><p><img src=\"/2021/07/17/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E4%BA%8E%E5%AE%9E%E6%97%B6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%92%8C%E6%8A%80%E6%9C%AF%E6%BC%94%E8%BF%9B/7ba8667f975c440caef888d43807c32e-6494458.png\" alt=\"基于实时深度学习的推荐系统架构设计和技术演进\"></p>\n<p>通常在我们接触的用户中，通常是关注的主要是三点：</p>\n<ul>\n<li>第一点就是模型的效果，我上线之后效果好不好？</li>\n<li>第二点就是成本，我到底花多少钱。</li>\n<li>第三点就是性能，能不能达到我对RT的要求。</li>\n</ul>\n<p>embedding store 多级的混合存储支持用户可配置不同的存储方式。可以在满足用户性能的前提下，更大程度的降低用户的成本。</p>\n<p>embedding 场景是非常有自己场景特点的，比如说我们的特征存在很明显的冷热区别。有些商品或者视频本身特别热；有些则是用户的点击行为特别多，也会造成它特别热。有些冷门的商品或者视频就没人点，这是很明显的冷热分离，也是符合这种二八原则的。</p>\n<p>EmbeddingStore 会把这些热的特征存储到 DRAM 上面，然后冷的特征存放在 PMEM 或者是 SSD 上。</p>\n<h3 id=\"超大稀疏模型预测\"><a href=\"#超大稀疏模型预测\" class=\"headerlink\" title=\"超大稀疏模型预测\"></a>超大稀疏模型预测</h3><p><img src=\"/2021/07/17/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E4%BA%8E%E5%AE%9E%E6%97%B6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%92%8C%E6%8A%80%E6%9C%AF%E6%BC%94%E8%BF%9B/8cd22078d4604c5d8b6f54e08506255a-6494492.png\" alt=\"基于实时深度学习的推荐系统架构设计和技术演进\"></p>\n<p>此外，EmbeddingStore 支持分布式存储 Service。在 serving 的时候，每个 serving 的节点其实都需要去做一个全量的模型的加载。如果使用 EmbeddingStore 的分布式 service，就可以避免每个 serving 节点加载全量模型。</p>\n<p>EmbeddingStore 支持用户可配置这种分布式的 embedding， 独立的 isolated 这种 embedding store service。每个 serving 节点查询稀疏特征时从 EmbeddingStore Service 查询。</p>\n<p>EmbeddingStore 的设计充分的考虑了稀疏特征的数据格式和访问特点。举个简单的例子：稀疏特征的 key 和 value ，key 是 int64 ， value 就是一个 float 数组。无论是在 serving 还是在 training，访问都是大批量的访问。此外 Inference 阶段对稀疏特征的访问是无锁化的只读访问。这些都是促使我们设计基于 embedding 场景的稀疏特征存储的原因。</p>\n<h3 id=\"实时训练模型校正\"><a href=\"#实时训练模型校正\" class=\"headerlink\" title=\"实时训练模型校正\"></a>实时训练模型校正</h3><p><img src=\"/2021/07/17/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E4%BA%8E%E5%AE%9E%E6%97%B6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%92%8C%E6%8A%80%E6%9C%AF%E6%BC%94%E8%BF%9B/902a3a57e6894191a00b9841eff968e2-6494525.png\" alt=\"基于实时深度学习的推荐系统架构设计和技术演进\"></p>\n<p>为什么 PAI-ODL 会支持离线训练模型对 online training 有一个模型校正？</p>\n<p>通常在实时训练过程中，会存在这种 label 不准以及样本分布的问题。因此使用天级别的模型会自动校正到 online training，增强模型的稳定性。PAI-ODL 提供的模型校正用户是无干预的，用户基于自己业务特点配置相关配置后，每天自动根据新产生的全量模型进行 online training 端的 base 模型校正。当离线训练生成 base 模型，online training 会自动发现 base model，并且在 data stream source 会自动跳转到对应的样本，基于最新的 base 模型和新的 online training 的训练样本点开始 online training。</p>\n<h3 id=\"模型回退及样本回放\"><a href=\"#模型回退及样本回放\" class=\"headerlink\" title=\"模型回退及样本回放\"></a>模型回退及样本回放</h3><p><img src=\"/2021/07/17/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/%E5%9F%BA%E4%BA%8E%E5%AE%9E%E6%97%B6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%92%8C%E6%8A%80%E6%9C%AF%E6%BC%94%E8%BF%9B/5de361033b25468e802b8b0fe3f1657e-6494553.png\" alt=\"基于实时深度学习的推荐系统架构设计和技术演进\"></p>\n<p>虽然有样本的异常样本检测以及异常样本处理，仍然无法避免线上的更新模型会有效果问题。</p>\n<p>当用户收到报警，线上的指标下降。需要提供给用户一个能力，可以回滚这个模型。</p>\n<p>但是在 online training 的场景中，从发现问题到去干预可能经过了好几个模型的迭代，产出了若干模型了。此时的回滚包含：</p>\n<p>1）线上 serving 的模型回滚到问题时间点的前一个模型；</p>\n<p>2）同时 online training 需要回跳到问题模型的前一个模型；</p>\n<p>3）样本也要回跳到那个时间点来重新开始进行训练。</p>\n","categories":["系统设计"],"tags":["系统设计"]},{"title":"Hello World","url":"/2021/07/14/tools/%E5%8D%9A%E5%AE%A2%E5%8F%8A%E8%BE%85%E5%8A%A9%E5%B7%A5%E5%85%B7/hexo/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<span id=\"more\"></span>\n\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"them-config","url":"/2021/07/15/tools/%E5%8D%9A%E5%AE%A2%E5%8F%8A%E8%BE%85%E5%8A%A9%E5%B7%A5%E5%85%B7/hexo/hexo-them-config/","content":"<h1 id=\"hexo-theme-indigo-plus\"><a href=\"#hexo-theme-indigo-plus\" class=\"headerlink\" title=\"hexo-theme-indigo-plus\"></a>hexo-theme-indigo-plus</h1><blockquote>\n<p>基于 <a href=\"https://github.com/yscoder/hexo-theme-indigo\">hexo-theme-indigo</a> 主题进行优化，效果展示参见 <a href=\"https://abelsu7.top/\">我的博客</a></p>\n</blockquote>\n<span id=\"more\"></span>\n\n<ul>\n<li><a href=\"#new-feature\">New Feature</a></li>\n<li><a href=\"#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B\">快速开始</a><ul>\n<li><a href=\"#1-%E5%AE%89%E8%A3%85-hexo\">1. 安装 Hexo</a></li>\n<li><a href=\"#2-%E8%AE%BE%E7%BD%AE%E8%AF%AD%E8%A8%80%E5%B9%B6%E7%A6%81%E7%94%A8-highlightjs\">2. 设置语言并禁用 highlight.js</a></li>\n<li><a href=\"#3-%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85\">3. 主题安装</a></li>\n<li><a href=\"#4-%E4%BE%9D%E8%B5%96%E5%AE%89%E8%A3%85\">4. 依赖安装</a><ul>\n<li><a href=\"#less\">Less</a></li>\n<li><a href=\"#feed\">Feed</a></li>\n<li><a href=\"#json-content\">JSON-Content</a></li>\n<li><a href=\"#qr-code\">QR-Code</a></li>\n<li><a href=\"#deploy\">Deploy</a></li>\n<li><a href=\"#kramed\">Kramed</a></li>\n<li><a href=\"#asset%E5%8F%AF%E9%80%89\">Asset（可选）</a></li>\n<li><a href=\"#recommend%E5%8F%AF%E9%80%89\">Recommend（可选）</a></li>\n<li><a href=\"#douban%E5%8F%AF%E9%80%89\">Douban（可选）</a></li>\n<li><a href=\"#baidu-url-submit%E5%8F%AF%E9%80%89\">Baidu URL Submit（可选）</a></li>\n<li><a href=\"#sitemap%E5%8F%AF%E9%80%89\">Sitemap（可选）</a></li>\n</ul>\n</li>\n<li><a href=\"#5-%E4%BF%AE%E6%94%B9-scaffolds\">5. 修改 scaffolds</a></li>\n<li><a href=\"#6-%E6%96%87%E7%AB%A0%E7%BD%AE%E9%A1%B6\">6. 文章置顶</a></li>\n<li><a href=\"#7-%E6%8C%89%E9%9C%80%E5%BC%80%E5%90%AF-mathjax\">7. 按需开启 MathJax</a></li>\n<li><a href=\"#8-%E5%BC%80%E5%90%AF%E6%A0%87%E7%AD%BE%E9%A1%B5\">8. 开启标签页</a></li>\n<li><a href=\"#9-%E5%BC%80%E5%90%AF%E5%88%86%E7%B1%BB%E9%A1%B5\">9. 开启分类页</a></li>\n<li><a href=\"#10-%E5%BC%80%E5%90%AF%E5%85%B3%E4%BA%8E%E9%A1%B5\">10. 开启关于页</a></li>\n<li><a href=\"#11-%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B\">11. 使用示例</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"New-Feature\"><a href=\"#New-Feature\" class=\"headerlink\" title=\"New Feature\"></a>New Feature</h2><ul>\n<li>添加<strong>直达评论悬浮按钮</strong></li>\n<li><strong>归档、分类、标签页面</strong>添加<strong>文章计数</strong></li>\n<li><strong>各个分类、标签</strong>添加单独的<strong>文章计数</strong></li>\n<li>修改打赏的<strong>切换按钮样式</strong></li>\n<li>优化 <strong>Valine</strong> 在 hexo-theme-indigo 中的<strong>显示效果</strong></li>\n<li>优化 <strong>hexo-douban</strong> 在 hexo-theme-indigo 中的<strong>显示效果</strong></li>\n<li>使用 <strong>prism.js</strong> 替换 highlight.js 实现<strong>代码高亮</strong>，并在<code>_config.yml</code>中添加代码主题配置项</li>\n<li>可控制<strong>仅在单个 post 中引入</strong><code>MathJax.js</code></li>\n<li>Change ul list-style and toc bottom padding</li>\n<li>更新 busuanzi CDN 地址</li>\n<li><code>tags</code>及<code>categories</code>页面按照<strong>字母顺序</strong>排序</li>\n<li>自定义<strong>文章置顶</strong></li>\n<li>集成<strong>百度自动推送</strong></li>\n<li>敬请期待</li>\n</ul>\n<h2 id=\"快速开始\"><a href=\"#快速开始\" class=\"headerlink\" title=\"快速开始\"></a>快速开始</h2><h3 id=\"1-安装-Hexo\"><a href=\"#1-安装-Hexo\" class=\"headerlink\" title=\"1. 安装 Hexo\"></a>1. 安装 Hexo</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\">hexo init blog</span><br><span class=\"line\"><span class=\"built_in\">cd</span> blog</span><br><span class=\"line\">npm install</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-设置语言并禁用-highlight-js\"><a href=\"#2-设置语言并禁用-highlight-js\" class=\"headerlink\" title=\"2. 设置语言并禁用 highlight.js\"></a>2. 设置语言并禁用 highlight.js</h3><p>修改<strong>博客根目录</strong>下的<code>_config.yml</code>，设置<code>language</code>为<code>zh-CN</code>，并将<code>highlight</code>设置为<code>false</code>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Hexo Configuration</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class=\"line\"><span class=\"comment\">## Source: https://github.com/hexojs/hexo/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Site</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Keep</span> <span class=\"string\">Coding</span></span><br><span class=\"line\"><span class=\"attr\">subtitle:</span> <span class=\"string\">苏易北</span></span><br><span class=\"line\"><span class=\"attr\">description:</span> <span class=\"string\">Abel</span> <span class=\"string\">Su的编程笔记</span></span><br><span class=\"line\"><span class=\"attr\">keywords:</span> <span class=\"string\">KVM,Go,Docker,Kubernetes,Linux,虚拟化,云计算</span></span><br><span class=\"line\"><span class=\"attr\">author:</span> <span class=\"string\">Abel</span> <span class=\"string\">Su</span></span><br><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">zh-CN</span></span><br><span class=\"line\"><span class=\"attr\">timezone:</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"attr\">highlight:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># line_number: true</span></span><br><span class=\"line\">  <span class=\"comment\"># auto_detect: false</span></span><br><span class=\"line\">  <span class=\"comment\"># tab_replace: </span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-主题安装\"><a href=\"#3-主题安装\" class=\"headerlink\" title=\"3. 主题安装\"></a>3. 主题安装</h3><p>安装需确认你的 <strong>Hexo</strong> 版本在<code>3.0</code>以上，以及 <strong>Node</strong> 版本为<code>6.x</code>以上，在<strong>博客根目录</strong>，执行以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/abelsu7/hexo-theme-indigo-plus.git themes/indigo-plus</span><br></pre></td></tr></table></figure>\n\n<p>之后在<strong>博客根目录</strong>下的<code>_config.yml</code>中指定使用主题<code>indigo-plus</code>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Extensions</span></span><br><span class=\"line\"><span class=\"comment\">## Plugins: https://hexo.io/plugins/</span></span><br><span class=\"line\"><span class=\"comment\">## Themes: https://hexo.io/themes/</span></span><br><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">indigo-plus</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-依赖安装\"><a href=\"#4-依赖安装\" class=\"headerlink\" title=\"4. 依赖安装\"></a>4. 依赖安装</h3><p>还是在<strong>博客根目录</strong>下，如果以下插件已安装过，则无需再次安装。</p>\n<h4 id=\"Less\"><a href=\"#Less\" class=\"headerlink\" title=\"Less\"></a>Less</h4><p>主题默认使用<code>less</code>作为<code>css</code><strong>预处理工具</strong>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-renderer-less --save</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Feed\"><a href=\"#Feed\" class=\"headerlink\" title=\"Feed\"></a>Feed</h4><p>用于生成<code>rss</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"JSON-Content\"><a href=\"#JSON-Content\" class=\"headerlink\" title=\"JSON-Content\"></a>JSON-Content</h4><p>用于生成静态站点数据，用作<strong>站内搜索</strong>的数据源：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-json-content --save</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"QR-Code\"><a href=\"#QR-Code\" class=\"headerlink\" title=\"QR-Code\"></a>QR-Code</h4><blockquote>\n<p><strong>可选</strong>，不安装时会请求<code>jiathis API</code>生成二维码</p>\n</blockquote>\n<p>用于生成<strong>微信分享二维码</strong>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-helper-qrcode --save</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Deploy\"><a href=\"#Deploy\" class=\"headerlink\" title=\"Deploy\"></a>Deploy</h4><p>可以使用<code>hexo deploy</code>命令<strong>部署博客</strong>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p>使用<code>hexo g</code>生成<code>public</code>目录后，使用<code>hexo deploy</code>即可根据博客根目录下<code>_config.yml</code>中的配置部署博客。当有多个<code>deploy</code>及<code>repo</code>时，示例配置如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span></span><br><span class=\"line\">    <span class=\"attr\">github:</span> <span class=\"string\">git@github.com:abelsu7/blog.git,master</span></span><br><span class=\"line\">    <span class=\"attr\">coding:</span> <span class=\"string\">git@git.coding.net:abelsu7/blog.git,coding-pages</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">type:</span> <span class=\"string\">baidu_url_submitter</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>注意</strong>：若同时安装了<code>hexo-douban</code>插件，则无法使用<code>hexo d</code>这种缩写形式，而必须指明<code>hexo deploy</code>或<code>hexo douban</code></p>\n</blockquote>\n<h4 id=\"Kramed\"><a href=\"#Kramed\" class=\"headerlink\" title=\"Kramed\"></a>Kramed</h4><p>使用<code>hexo-renderer-kramed</code>替换默认的<code>hexo-renderer-marked</code>渲染引擎，否则使用<code>prism.js</code>高亮代码时会出现问题：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm uninstall hexo-renderer-marked --save</span><br><span class=\"line\">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Asset（可选）\"><a href=\"#Asset（可选）\" class=\"headerlink\" title=\"Asset（可选）\"></a>Asset（可选）</h4><p>使用 <a href=\"https://github.com/dangxuandev/hexo-asset-image\">hexo-asset-image</a> 自动生成文章对应的同名<strong>图片 asset 目录</strong>。</p>\n<p>首先在<strong>博客根目录</strong>下的<code>_config.yml</code>中，将<code>post_asset_folder</code>设置为<code>true</code>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"comment\"># Writing</span></span><br><span class=\"line\"><span class=\"attr\">new_post_name:</span> <span class=\"string\">:title.md</span> <span class=\"comment\"># File name of new posts</span></span><br><span class=\"line\"><span class=\"attr\">default_layout:</span> <span class=\"string\">post</span></span><br><span class=\"line\"><span class=\"attr\">titlecase:</span> <span class=\"literal\">false</span> <span class=\"comment\"># Transform title into titlecase</span></span><br><span class=\"line\"><span class=\"attr\">external_link:</span> <span class=\"literal\">true</span> <span class=\"comment\"># Open external links in new tab</span></span><br><span class=\"line\"><span class=\"attr\">filename_case:</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">render_drafts:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">post_asset_folder:</span> <span class=\"literal\">true</span> <span class=\"comment\"># 修改这里为 true</span></span><br><span class=\"line\"><span class=\"attr\">relative_link:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">future:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">highlight:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># line_number: true</span></span><br><span class=\"line\">  <span class=\"comment\"># auto_detect: false</span></span><br><span class=\"line\">  <span class=\"comment\"># tab_replace:</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br></pre></td></tr></table></figure>\n\n<p>之后在<strong>博客根目录</strong>下安装<code>hexo-asset-image</code>：</p>\n<blockquote>\n<p>注意：若安装最新版的<code>hexo-asset-image</code>，使用相对路径引用图片时貌似会出现图片路径错误的问题，参见 <a href=\"https://850552586.github.io/2018/11/15/hexo%E5%BC%95%E7%94%A8%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA/\">hexo 引用本地图片无法显示 | Ericam_blog</a></p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-asset-image@<span class=\"number\">0.0</span><span class=\"number\">.3</span> --save</span><br></pre></td></tr></table></figure>\n\n<p>例如使用以下命令新建<code>post</code>文章：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new post MacGesture2-Publish</span><br></pre></td></tr></table></figure>\n\n<p>就会在<code>source/_posts/</code>目录下生成同名的图片 asset 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">MacGesture2-Publish</span><br><span class=\"line\">├── apppicker.jpg</span><br><span class=\"line\">├── logo.jpg</span><br><span class=\"line\">└── rules.jpg</span><br><span class=\"line\">MacGesture2-Publish.md</span><br></pre></td></tr></table></figure>\n\n<p>只需要文章中使用<code>![logo](logo.jpg)</code>，即可引用图片。</p>\n<h4 id=\"Recommend（可选）\"><a href=\"#Recommend（可选）\" class=\"headerlink\" title=\"Recommend（可选）\"></a>Recommend（可选）</h4><p>使用 <a href=\"https://github.com/huiwang/hexo-recommended-posts\">hexo-recommended-posts</a> 生成<strong>相关文章推荐列表</strong>。</p>\n<p>首先在<strong>博客根目录</strong>下安装插件：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-recommended-posts --save</span><br></pre></td></tr></table></figure>\n\n<p>之后在<strong>博客根目录</strong>下的<code>_config.yml</code>中添加以下内容以<strong>覆盖默认配置</strong>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Hexo recommended posts</span></span><br><span class=\"line\"><span class=\"attr\">recommended_posts:</span></span><br><span class=\"line\">  <span class=\"attr\">server:</span> <span class=\"string\">https://api.truelaurel.com</span> <span class=\"comment\">#后端推荐服务器地址</span></span><br><span class=\"line\">  <span class=\"attr\">timeoutInMillis:</span> <span class=\"number\">15000</span> <span class=\"comment\">#服务时长，超过此时长，则使用离线推荐模式</span></span><br><span class=\"line\">  <span class=\"attr\">internalLinks:</span> <span class=\"number\">3</span> <span class=\"comment\">#内部文章数量</span></span><br><span class=\"line\">  <span class=\"attr\">externalLinks:</span> <span class=\"number\">2</span> <span class=\"comment\">#外部文章数量</span></span><br><span class=\"line\">  <span class=\"attr\">fixedNumber:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">autoDisplay:</span> <span class=\"literal\">true</span> <span class=\"comment\">#自动在文章底部显示推荐文章</span></span><br><span class=\"line\">  <span class=\"attr\">excludePattern:</span> []</span><br><span class=\"line\">  <span class=\"attr\">titleHtml:</span> <span class=\"string\">&lt;strong&gt;🚩推荐阅读&lt;/strong&gt;（由&lt;a</span> <span class=\"string\">href=&quot;https://github.com/huiwang/hexo-recommended-posts&quot;&gt;hexo文章推荐插件&lt;/a&gt;驱动）</span> <span class=\"comment\">#自定义标题</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>具体参数设置参见 <a href=\"https://github.com/huiwang/hexo-recommended-posts\">hexo-recommended-posts</a> 文档</p>\n</blockquote>\n<p>只需在<code>hexo g</code>命令前，在<strong>博客根目录</strong>使用以下命令<strong>获取推荐文章列表</strong>，存放于<code>source\\_data\\recommended_posts.json</code>中：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo recommend</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Douban（可选）\"><a href=\"#Douban（可选）\" class=\"headerlink\" title=\"Douban（可选）\"></a>Douban（可选）</h4><p>使用 <a href=\"https://github.com/mythsman/hexo-douban\">hexo-douban</a> 生成<strong>豆瓣电影、读书、游戏</strong>展示页面。</p>\n<p>首先在<strong>博客根目录</strong>下安装插件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-douban --save</span><br></pre></td></tr></table></figure>\n\n<p>之后在<strong>博客根目录</strong>下的<code>_config.yml</code>中添加如下配置（以下为示例，请根据需要自行修改）：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># hexo-douban config</span></span><br><span class=\"line\"><span class=\"attr\">douban:</span></span><br><span class=\"line\">  <span class=\"attr\">user:</span> <span class=\"string\">abelsu7</span> <span class=\"comment\"># your Douban ID</span></span><br><span class=\"line\">  <span class=\"attr\">builtin:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">book:</span> </span><br><span class=\"line\">    <span class=\"attr\">title:</span> <span class=\"string\">&#x27;读书&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">quote:</span> <span class=\"string\">&lt;p&gt;注：&lt;b&gt;&lt;font</span> <span class=\"string\">color=&quot;#3f51b5&quot;&gt;IE、Edge及Safari&lt;/font&gt;&lt;/b&gt;中无法正常加载图片&lt;br/&gt;请移步我的&lt;a</span> <span class=\"string\">href=&quot;https://book.douban.com/people/abelsu7/&quot;</span> <span class=\"string\">target=&quot;_blank&quot;&gt;&lt;font</span> <span class=\"string\">color=&quot;#ff4081&quot;&gt;豆瓣读书&lt;/font&gt;&lt;/a&gt;主页&lt;/p&gt;</span></span><br><span class=\"line\">    <span class=\"attr\">subtitle:</span> <span class=\"string\">&#x27;Books are the ladder of human progress.&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">movie:</span></span><br><span class=\"line\">    <span class=\"attr\">title:</span> <span class=\"string\">&#x27;影视&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">quote:</span> <span class=\"string\">&lt;p&gt;注：&lt;b&gt;&lt;font</span> <span class=\"string\">color=&quot;#3f51b5&quot;&gt;IE、Edge及Safari&lt;/font&gt;&lt;/b&gt;中无法正常加载图片&lt;br/&gt;请移步我的&lt;a</span> <span class=\"string\">href=&quot;https://movie.douban.com/people/abelsu7/&quot;</span> <span class=\"string\">target=&quot;_blank&quot;&gt;&lt;font</span> <span class=\"string\">color=&quot;#ff4081&quot;&gt;豆瓣电影&lt;/font&gt;&lt;/a&gt;主页&lt;/p&gt;</span></span><br><span class=\"line\">    <span class=\"attr\">subtitle:</span> <span class=\"string\">&#x27;如果有多一张船票，你会不会跟我一起走？&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">game:</span></span><br><span class=\"line\">    <span class=\"attr\">title:</span> <span class=\"string\">&#x27;游戏&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">quote:</span> <span class=\"string\">&lt;p&gt;注：&lt;b&gt;&lt;font</span> <span class=\"string\">color=&quot;#3f51b5&quot;&gt;IE、Edge及Safari&lt;/font&gt;&lt;/b&gt;中无法正常加载图片&lt;br/&gt;请移步我的&lt;a</span> <span class=\"string\">href=&quot;https://www.douban.com/people/abelsu7/games?action=collect&quot;</span> <span class=\"string\">target=&quot;_blank&quot;&gt;&lt;font</span> <span class=\"string\">color=&quot;#ff4081&quot;&gt;豆瓣游戏&lt;/font&gt;&lt;/a&gt;主页&lt;/p&gt;</span></span><br><span class=\"line\">    <span class=\"attr\">subtitle:</span> <span class=\"string\">&#x27;胜败乃兵家常事，大侠请重新来过&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">timeout:</span> <span class=\"number\">40000</span></span><br></pre></td></tr></table></figure>\n\n<p>此时运行<code>hexo-douban</code>已经可以生成相应的页面。但为使其风格与本主题更加协调，还需手动修改<code>hexo-douban</code>插件的部分代码。</p>\n<p>首先进入<code>node_modules/hexo-douban/lib/templates</code>目录，分别将<code>book.ejs</code>、<code>movie.ejs</code>、<code>game.ejs</code>替换为以下内容。</p>\n<p><code>book.ejs</code>内容如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;blockquote&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        &lt;%- quote; %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\">&lt;/blockquote&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    &lt;% include index.css %&gt;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container body-wrap card&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;page-article fade&quot;</span> <span class=\"attr\">itemprop</span>=<span class=\"string\">&quot;blogPage&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;hexo-douban-tabs&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;hexo-douban-tab&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;hexo-douban-tab1&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;external&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                &lt;%= __(&#x27;bookReading&#x27;) %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                (</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;%= reading.length %&gt;)<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;hexo-douban-tab&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;hexo-douban-tab2&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;external&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                &lt;%= __(&#x27;bookWish&#x27;) %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                (</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;%= wish.length %&gt;)<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;hexo-douban-tab&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;hexo-douban-tab3&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;external&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                &lt;%= __(&#x27;bookRead&#x27;) %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                (</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;%= read.length %&gt;)<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;hexo-douban-item1&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% reading.forEach(function(item)&#123; %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% include bookReading.ejs %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% &#125;); %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% include pagination.ejs %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;hexo-douban-item2&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% wish.forEach(function(item)&#123; %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% include bookWish.ejs %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% &#125;); %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% include pagination.ejs %&gt;</span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;hexo-douban-item3&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% read.forEach(function(item)&#123; %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% include bookRead.ejs %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% &#125;); %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% include pagination.ejs %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    &lt;% include index.js %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">    &lt;% include pagination.js %&gt;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p><code>movie.ejs</code>内容如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;blockquote&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        &lt;%- quote; %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\">&lt;/blockquote&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    &lt;% include index.css %&gt;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container body-wrap card&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;page-article fade&quot;</span> <span class=\"attr\">itemprop</span>=<span class=\"string\">&quot;blogPage&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;hexo-douban-tabs&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;hexo-douban-tab&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;hexo-douban-tab1&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;external&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                &lt;%= __(&#x27;movieWatching&#x27;) %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                (</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;%= watching.length %&gt;)<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;hexo-douban-tab&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;hexo-douban-tab2&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;external&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                &lt;%= __(&#x27;movieWish&#x27;) %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                (</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;%= wish.length %&gt;)<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;hexo-douban-tab&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;hexo-douban-tab3&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;external&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                &lt;%= __(&#x27;movieWatched&#x27;) %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                (</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;%= watched.length %&gt;)<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;hexo-douban-item1&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% watching.forEach(function(item)&#123; %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% include movieWatching.ejs %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% &#125;); %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% include pagination.ejs %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;hexo-douban-item2&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% wish.forEach(function(item)&#123; %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% include movieWish.ejs %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% &#125;); %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% include pagination.ejs %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;hexo-douban-item3&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% watched.forEach(function(item)&#123; %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% include movieWatched.ejs %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% &#125;); %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% include pagination.ejs %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    &lt;% include index.js %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">    &lt;% include pagination.js %&gt;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p><code>game.ejs</code>内容如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;blockquote&gt;</span><br><span class=\"line\">    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        &lt;%- quote %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\">&lt;/blockquote&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    &lt;% include index.css %&gt;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container body-wrap card&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;page-article fade&quot;</span> <span class=\"attr\">itemprop</span>=<span class=\"string\">&quot;blogPage&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;hexo-douban-tabs&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;hexo-douban-tab&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;hexo-douban-tab1&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;external&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                &lt;%= __(&#x27;gamePlaying&#x27;) %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                (</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;%= playing.length %&gt;)<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;hexo-douban-tab&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;hexo-douban-tab2&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;external&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                &lt;%= __(&#x27;gameWish&#x27;) %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                (</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;%= wish.length %&gt;)<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;hexo-douban-tab&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;hexo-douban-tab3&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;external&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                &lt;%= __(&#x27;gamePlayed&#x27;) %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                (</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;%= played.length %&gt;)<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;hexo-douban-item1&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% playing.forEach(function(item)&#123; %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% include gamePlaying.ejs %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% &#125;); %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% include pagination.ejs %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;hexo-douban-item2&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% wish.forEach(function(item)&#123; %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% include gameWish.ejs %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% &#125;); %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% include pagination.ejs %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;hexo-douban-item3&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% played.forEach(function(item)&#123; %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% include gamePlayed.ejs %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% &#125;); %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                &lt;% include pagination.ejs %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    &lt;% include index.js %&gt;</span></span><br><span class=\"line\"><span class=\"xml\">    &lt;% include pagination.js %&gt;</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>之后打开该目录下的<code>index.css</code>，添加或修改以下样式：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.hexo-douban-tabs</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin-top</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center; <span class=\"comment\">/* 新增 */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.hexo-douban-tab</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#303f9f</span>; <span class=\"comment\">/* 新增 */</span></span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 新增 .hexo-douban-tab:hover */</span></span><br><span class=\"line\"><span class=\"selector-class\">.hexo-douban-tab</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#ff4081</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 修改 .hexo-douban-active */</span></span><br><span class=\"line\"><span class=\"selector-class\">.hexo-douban-active</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* background: #657b83; */</span></span><br><span class=\"line\">    <span class=\"comment\">/* color: #fff; */</span></span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#ff4081</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">...</span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"comment\">/* 修改 .hexo-douban-button:hover */</span></span><br><span class=\"line\"><span class=\"selector-class\">.hexo-douban-button</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* background: #657b83; */</span></span><br><span class=\"line\">    <span class=\"comment\">/* color: #fff; */</span></span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#ff4081</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">...</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p>最后在<code>books-generator.js</code>、<code>movies-generator.js</code>、<code>games-generator.js</code>最后的<code>return</code>语句中，添加对应的<code>layout</code>：</p>\n<p><code>books-generator.js</code>的最后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">...</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">&#x27;books/index.html&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">title</span>: config.douban.book.title,</span><br><span class=\"line\">            <span class=\"attr\">content</span>: contents,</span><br><span class=\"line\">            <span class=\"attr\">slug</span>: <span class=\"string\">&#x27;books&#x27;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">layout</span>: [<span class=\"string\">&#x27;book&#x27;</span>, <span class=\"string\">&#x27;page&#x27;</span>, <span class=\"string\">&#x27;post&#x27;</span>] <span class=\"comment\">// 添加 &#x27;book&#x27;</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><code>movies-generator.js</code>的最后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">...</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">&#x27;movies/index.html&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">title</span>: config.douban.movie.title,</span><br><span class=\"line\">            <span class=\"attr\">content</span>: contents,</span><br><span class=\"line\">            <span class=\"attr\">slug</span>: <span class=\"string\">&#x27;movies&#x27;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">layout</span>: [<span class=\"string\">&#x27;movie&#x27;</span>, <span class=\"string\">&#x27;page&#x27;</span>, <span class=\"string\">&#x27;post&#x27;</span>] <span class=\"comment\">// 添加 &#x27;movie&#x27;</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><code>games-generator.js</code>的最后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">...</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">&#x27;games/index.html&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">title</span>: config.douban.game.title,</span><br><span class=\"line\">            <span class=\"attr\">content</span>: contents,</span><br><span class=\"line\">            <span class=\"attr\">slug</span>: <span class=\"string\">&#x27;games&#x27;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">layout</span>: [<span class=\"string\">&#x27;game&#x27;</span>, <span class=\"string\">&#x27;page&#x27;</span>, <span class=\"string\">&#x27;post&#x27;</span>] <span class=\"comment\">// 添加 &#x27;game&#x27;</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Baidu-URL-Submit（可选）\"><a href=\"#Baidu-URL-Submit（可选）\" class=\"headerlink\" title=\"Baidu URL Submit（可选）\"></a>Baidu URL Submit（可选）</h4><p>使用 <a href=\"https://github.com/huiwang/hexo-baidu-url-submit\">hexo-baidu-url-submit</a> 将<strong>博客新链接</strong>主动推送至<strong>百度搜索引擎</strong>。</p>\n<p>首先在<strong>博客根目录</strong>下安装插件：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure>\n\n<p>之后在博客根目录下的<code>_config.yml</code>中进行配置：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"comment\"># Baidu URL Submit</span></span><br><span class=\"line\"><span class=\"attr\">baidu_url_submit:</span></span><br><span class=\"line\">  <span class=\"attr\">count:</span> <span class=\"number\">1000</span> <span class=\"comment\">## 提交最新的一个链接</span></span><br><span class=\"line\">  <span class=\"attr\">host:</span> <span class=\"string\">alili.tech</span> <span class=\"comment\">## 在百度站长平台中注册的域名</span></span><br><span class=\"line\">  <span class=\"attr\">token:</span> <span class=\"string\">xxxxx</span> <span class=\"comment\">## 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">baidu_urls.txt</span> <span class=\"comment\">## 文本文档的地址， 新链接会保存在此文本文档里</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span></span><br><span class=\"line\">    <span class=\"attr\">github:</span> <span class=\"string\">git@github.com:abelsu7/blog.git,master</span></span><br><span class=\"line\">    <span class=\"attr\">coding:</span> <span class=\"string\">git@git.coding.net:abelsu7/blog.git,coding-pages</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">type:</span> <span class=\"string\">baidu_url_submitter</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Sitemap（可选）\"><a href=\"#Sitemap（可选）\" class=\"headerlink\" title=\"Sitemap（可选）\"></a>Sitemap（可选）</h4><p>自动生成<code>sitemap.xml</code>以及<code>baidusitemap.xml</code>。</p>\n<p>首先在<strong>博客根目录</strong>安装插件：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br><span class=\"line\">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>\n\n<p>之后在<strong>博客根目录</strong>下的<code>_config.yml</code>中<strong>添加配置</strong>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 自动生成sitemap</span></span><br><span class=\"line\"><span class=\"attr\">sitemap:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">sitemap.xml</span></span><br><span class=\"line\"><span class=\"attr\">baidusitemap:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">baidusitemap.xml</span></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"5-修改-scaffolds\"><a href=\"#5-修改-scaffolds\" class=\"headerlink\" title=\"5. 修改 scaffolds\"></a>5. 修改 scaffolds</h3><p>初始化 Hexo 博客后，默认会在<code>scaffolds</code>目录下创建<code>draft.md</code>、<code>page.md</code>、<code>post.md</code>三个模板文件，使用<code>hexo new</code>命令新建页面时就会基于上述模板文件生成对应的 Markdown 文件。为了方便使用，建议将<code>scaffolds</code>下的模板文件修改如下：</p>\n<p><code>draft.md</code>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> &#123;&#123; <span class=\"string\">title</span> &#125;&#125;</span><br><span class=\"line\"><span class=\"attr\">category:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> </span><br><span class=\"line\"><span class=\"attr\">tags:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> </span><br><span class=\"line\"><span class=\"attr\">date:</span> &#123;&#123; <span class=\"string\">date</span> &#125;&#125;</span><br><span class=\"line\"><span class=\"attr\">top:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br></pre></td></tr></table></figure>\n\n<p><code>page.md</code>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">layout:</span> <span class=\"string\">page</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> &#123;&#123; <span class=\"string\">title</span> &#125;&#125;</span><br><span class=\"line\"><span class=\"attr\">date:</span> &#123;&#123; <span class=\"string\">date</span> &#125;&#125;</span><br><span class=\"line\"><span class=\"attr\">top:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br></pre></td></tr></table></figure>\n\n<p><code>post.md</code>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> &#123;&#123; <span class=\"string\">title</span> &#125;&#125;</span><br><span class=\"line\"><span class=\"attr\">category:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> </span><br><span class=\"line\"><span class=\"attr\">tags:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> </span><br><span class=\"line\"><span class=\"attr\">date:</span> &#123;&#123; <span class=\"string\">date</span> &#125;&#125;</span><br><span class=\"line\"><span class=\"attr\">top:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br></pre></td></tr></table></figure>\n\n<p>这里添加了<code>top: 1</code>属性，是为了实现文章置顶功能，参见 <a href=\"https://abelsu7.top/2019/02/28/hexo-pin-top/\">Hexo 实现自定义文章置顶 | 苏易北</a>。</p>\n<h3 id=\"6-文章置顶\"><a href=\"#6-文章置顶\" class=\"headerlink\" title=\"6. 文章置顶\"></a>6. 文章置顶</h3><p>修改博客根目录下<code>_config.yml</code>文件：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"comment\"># Home page setting</span></span><br><span class=\"line\"><span class=\"comment\"># path: Root path for your blogs index page. (default = &#x27;&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class=\"line\"><span class=\"comment\"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class=\"line\"><span class=\"attr\">index_generator:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">per_page:</span> <span class=\"number\">10</span></span><br><span class=\"line\">  <span class=\"attr\">order_by:</span> </span><br><span class=\"line\">    <span class=\"attr\">top:</span> <span class=\"number\">-1</span></span><br><span class=\"line\">    <span class=\"attr\">date:</span> <span class=\"number\">-1</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br></pre></td></tr></table></figure>\n\n<p>即可在首页先根据<code>top</code>值、再根据<code>date</code>，对所有文章进行排序。所有文章默认<code>top: 1</code>，如需置顶文章，只需将其<code>top</code>值修改为大于 1 的整数，同一<code>top</code>值可有多篇文章，<code>top</code>值相同时按照<code>date</code>排序。</p>\n<blockquote>\n<p>注意：需要确保所有的<code>post</code>都有<code>top</code>和<code>date</code>属性，否则会导致排序失败。可在每次新建文章时使用<code>hexo new post &lt;post_title&gt;</code>创建，即可根据<code>post.md</code>模板生成对应的文章文件</p>\n</blockquote>\n<h3 id=\"7-按需开启-MathJax\"><a href=\"#7-按需开启-MathJax\" class=\"headerlink\" title=\"7. 按需开启 MathJax\"></a>7. 按需开启 MathJax</h3><p>可以按需开启<code>MathJax</code>支持。首先确保<code>themes/indigo-plus/_config.yml</code>中，<code>mathjax</code>设置为<code>true</code>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"comment\"># 文章截断</span></span><br><span class=\"line\"><span class=\"attr\">excerpt_render:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">excerpt_length:</span> <span class=\"number\">200</span></span><br><span class=\"line\"><span class=\"attr\">excerpt_link:</span> <span class=\"string\">阅读全文...</span></span><br><span class=\"line\"><span class=\"attr\">mathjax:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">archive_yearly:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br></pre></td></tr></table></figure>\n\n<p>如要在某篇文章中开启<code>MathJax</code>支持，只需在其<code>YAML</code>头部中加入<code>mathjax: true</code>，例如：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">在</span> <span class=\"string\">Hexo</span> <span class=\"string\">中使用</span> <span class=\"string\">MathJax</span> <span class=\"string\">渲染数学公式</span></span><br><span class=\"line\"><span class=\"attr\">category:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">前端</span></span><br><span class=\"line\"><span class=\"attr\">tags:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">Hexo</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">MathJax</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">LaTex</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">数学</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2018-10-29 19:58:35</span></span><br><span class=\"line\"><span class=\"attr\">top:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">mathjax:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>注意</strong>：可能会遇到行内公式的渲染问题，参见 <a href=\"https://abelsu7.top/2018/10/29/hexo-mathjax/\">在 Hexo 中使用 MathJax 渲染数学公式 | 苏易北</a></p>\n</blockquote>\n<h3 id=\"8-开启标签页\"><a href=\"#8-开启标签页\" class=\"headerlink\" title=\"8. 开启标签页\"></a>8. 开启标签页</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new page tags</span><br></pre></td></tr></table></figure>\n\n<p>并修改<code>blog/source/tags/index.md</code>的元数据：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"attr\">layout:</span> <span class=\"string\">tags</span></span><br><span class=\"line\"><span class=\"attr\">comments:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"9-开启分类页\"><a href=\"#9-开启分类页\" class=\"headerlink\" title=\"9. 开启分类页\"></a>9. 开启分类页</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new page categories</span><br></pre></td></tr></table></figure>\n\n<p>并修改<code>blog/source/categories/index.md</code>的元数据：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"attr\">layout:</span> <span class=\"string\">categories</span></span><br><span class=\"line\"><span class=\"attr\">comments:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"10-开启关于页\"><a href=\"#10-开启关于页\" class=\"headerlink\" title=\"10. 开启关于页\"></a>10. 开启关于页</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new page about</span><br></pre></td></tr></table></figure>\n\n<p>关于<code>page</code>页面的语法规则，具体参见 <a href=\"https://github.com/yscoder/hexo-theme-indigo\">hexo-theme-indigo</a> 文档。</p>\n<h3 id=\"11-使用示例\"><a href=\"#11-使用示例\" class=\"headerlink\" title=\"11. 使用示例\"></a>11. 使用示例</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo clean     <span class=\"comment\"># 清除 public 目录下的静态文件</span></span><br><span class=\"line\">hexo recommend <span class=\"comment\"># 获取推荐文章列表</span></span><br><span class=\"line\">hexo douban    <span class=\"comment\"># 生成豆瓣展示页面</span></span><br><span class=\"line\">hexo g         <span class=\"comment\"># 生成 public 目录下的静态文件</span></span><br><span class=\"line\">hexo s         <span class=\"comment\"># 本地启动 server</span></span><br><span class=\"line\">hexo deploy    <span class=\"comment\"># 部署博客至远程仓库</span></span><br></pre></td></tr></table></figure>\n\n\n<p>以下是 <a href=\"https://github.com/yscoder/hexo-theme-indigo\">hexo-theme-indigo</a> 的说明——</p>\n<hr>\n<h1 id=\"hexo-theme-material-indigo\"><a href=\"#hexo-theme-material-indigo\" class=\"headerlink\" title=\"hexo-theme-material-indigo\"></a>hexo-theme-material-indigo</h1><p><a href=\"https://gitter.im/hexo-theme-indigo/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\"><img src=\"https://badges.gitter.im/hexo-theme-indigo/Lobby.svg\" alt=\"Join the chat at https://gitter.im/hexo-theme-indigo/Lobby\"></a></p>\n<p>Material Design 风格的Hexo主题，基于 Hexo 3.0+ 制作。 <a href=\"http://imys.net/\">Preview</a></p>\n<blockquote>\n<p>现有两个主题分支，我的博客中使用的是 card 分支卡片风格主题，master 分支是旧版平铺式风格主题。</p>\n</blockquote>\n<h2 id=\"Feature\"><a href=\"#Feature\" class=\"headerlink\" title=\"Feature\"></a>Feature</h2><ol>\n<li>仅支持 IE10+ 等现代浏览器。</li>\n<li>去 jQuery，更轻。相信现代浏览器的原生兼容性。</li>\n<li>使用 Less 作为 css 预处理器，需要安装 <code>hexo-renderer-less</code>。</li>\n<li>添加了英文字体支持 Roboto。</li>\n<li>添加了一些波纹效果。By <a href=\"https://github.com/fians/Waves\">Waves</a></li>\n<li>无前端依赖的分享实现。</li>\n<li>基于静态数据的站内搜索，无第三方侵入。</li>\n<li>支持文章打赏。</li>\n</ol>\n<h2 id=\"Useage\"><a href=\"#Useage\" class=\"headerlink\" title=\"Useage\"></a>Useage</h2><p><a href=\"https://github.com/yscoder/hexo-theme-indigo/wiki\">文档 | Document</a></p>\n<h2 id=\"ChangeLog\"><a href=\"#ChangeLog\" class=\"headerlink\" title=\"ChangeLog\"></a>ChangeLog</h2><p>升级前请仔细查看更改内容，如非必要可不升级。</p>\n<p><a href=\"https://github.com/yscoder/hexo-theme-indigo/releases\">ChangeLog</a></p>\n<h2 id=\"OtherVersion\"><a href=\"#OtherVersion\" class=\"headerlink\" title=\"OtherVersion\"></a>OtherVersion</h2><ul>\n<li><a href=\"https://github.com/yscoder/vuepress-theme-indigo\">vuepress-theme-indigo</a></li>\n</ul>\n","categories":["hexo"],"tags":["theme"]},{"title":"SpringBoot配置文件密码加密","url":"/2021/07/17/java/spring/springboot/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%AF%86%E7%A0%81%E5%8A%A0%E5%AF%86/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>在日常开发中，可能很随意把数据库密码直接明文暴露在配置文件中，在开发环境可以这么做，但是在生产环境，是相当不建议这么做，毕竟安全无小事，谁也不知道哪天密码就莫名其妙泄露了。springboot项目中如何对数据库密码进行加密</p>\n<span id=\"more\"></span>\n\n<h1 id=\"方案一：使用druid数据库连接池对数据库密码加密\"><a href=\"#方案一：使用druid数据库连接池对数据库密码加密\" class=\"headerlink\" title=\"方案一：使用druid数据库连接池对数据库密码加密\"></a>方案一：使用druid数据库连接池对数据库密码加密</h1><p>##pom.xml引入druid包</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>druid-spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;druid.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"利用com-alibaba-druid-filter-config-ConfigTools生成公私钥\"><a href=\"#利用com-alibaba-druid-filter-config-ConfigTools生成公私钥\" class=\"headerlink\" title=\"利用com.alibaba.druid.filter.config.ConfigTools生成公私钥\"></a>利用com.alibaba.druid.filter.config.ConfigTools生成公私钥</h2><p><strong>ps：</strong> 生成的方式有两种，一种利用命令行生成，一种直接写个工具类生成。本文示例直接采用工具类生成</p>\n<p>工具类代码如下</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * alibaba druid加解密规则：</span></span><br><span class=\"line\"><span class=\"comment\"> * 明文密码+私钥(privateKey)加密=加密密码</span></span><br><span class=\"line\"><span class=\"comment\"> * 加密密码+公钥(publicKey)解密=明文密码</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DruidEncryptorUtils</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String privateKey;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String publicKey;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            String[] keyPair = ConfigTools.genKeyPair(<span class=\"number\">512</span>);</span><br><span class=\"line\">            privateKey = keyPair[<span class=\"number\">0</span>];</span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;privateKey--&gt;%s&quot;</span>,privateKey));</span><br><span class=\"line\">            publicKey = keyPair[<span class=\"number\">1</span>];</span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;publicKey--&gt;%s&quot;</span>,publicKey));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (NoSuchProviderException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 明文加密</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> plaintext</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@SneakyThrows</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">encode</span><span class=\"params\">(String plaintext)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;明文字符串：&quot;</span> + plaintext);</span><br><span class=\"line\">        String ciphertext = ConfigTools.encrypt(privateKey,plaintext);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;加密后字符串：&quot;</span> + ciphertext);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ciphertext;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 解密</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> ciphertext</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@SneakyThrows</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">decode</span><span class=\"params\">(String ciphertext)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;加密字符串：&quot;</span> + ciphertext);</span><br><span class=\"line\">        String plaintext = ConfigTools.decrypt(publicKey,ciphertext);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;解密后的字符串：&quot;</span> + plaintext);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> plaintext;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"修改数据库的配置文件内容信息\"><a href=\"#修改数据库的配置文件内容信息\" class=\"headerlink\" title=\"修改数据库的配置文件内容信息\"></a>修改数据库的配置文件内容信息</h2><p><strong>a 、</strong> 修改密码</p>\n<p>把密码替换成用DruidEncryptorUtils这个工具类生成的密码</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"code\"><pre><span class=\"line\">password: <span class=\"built_in\">$</span>&#123;DATASOURCE<span class=\"built_in\">_</span>PWD:HB5FmUeAI1U81YJrT/T6awImFg1/Az5o8imy765WkVJouOubC2H80jqmZrr8L9zWKuzS/8aGzuQ4YySAkhywnA==&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>b、</strong> filter开启config</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">filter:</span></span><br><span class=\"line\">   <span class=\"attr\">config:</span></span><br><span class=\"line\">     <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>c、配置connectionProperties属性</p>\n<p><strong>ps：</strong><br>spring.datasource.publickey为工具类生成的公钥</p>\n<p><strong>附录：</strong> 完整数据库配置</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">    <span class=\"attr\">datasource:</span></span><br><span class=\"line\">        <span class=\"attr\">type:</span> <span class=\"string\">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class=\"line\">        <span class=\"attr\">driverClassName:</span> <span class=\"string\">com.mysql.cj.jdbc.Driver</span></span><br><span class=\"line\">        <span class=\"attr\">url:</span> <span class=\"string\">$&#123;DATASOURCE_URL:jdbc:mysql://localhost:3306/demo?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai&#125;</span></span><br><span class=\"line\">        <span class=\"attr\">username:</span> <span class=\"string\">$&#123;DATASOURCE_USERNAME:root&#125;</span></span><br><span class=\"line\">        <span class=\"attr\">password:</span> <span class=\"string\">$&#123;DATASOURCE_PWD:HB5FmUeAI1U81YJrT/T6awImFg1/Az5o8imy765WkVJouOubC2H80jqmZrr8L9zWKuzS/8aGzuQ4YySAkhywnA==&#125;</span></span><br><span class=\"line\">        <span class=\"attr\">publickey:</span> <span class=\"string\">MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAIvP9xF4RCM4oFiu47NZY15iqNOAB9K2Ml9fiTLa05CWaXK7uFwBImR7xltZM1frl6ahWAXJB6a/FSjtJkTZUJECAwEAAQ==</span></span><br><span class=\"line\">        <span class=\"attr\">druid:</span></span><br><span class=\"line\">            <span class=\"comment\"># 初始连接数</span></span><br><span class=\"line\">            <span class=\"attr\">initialSize:</span> <span class=\"number\">5</span></span><br><span class=\"line\">            <span class=\"comment\"># 最小连接池数量</span></span><br><span class=\"line\">            <span class=\"attr\">minIdle:</span> <span class=\"number\">10</span></span><br><span class=\"line\">            <span class=\"comment\"># 最大连接池数量</span></span><br><span class=\"line\">            <span class=\"attr\">maxActive:</span> <span class=\"number\">20</span></span><br><span class=\"line\">            <span class=\"comment\"># 配置获取连接等待超时的时间</span></span><br><span class=\"line\">            <span class=\"attr\">maxWait:</span> <span class=\"number\">60000</span></span><br><span class=\"line\">            <span class=\"comment\"># 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒</span></span><br><span class=\"line\">            <span class=\"attr\">timeBetweenEvictionRunsMillis:</span> <span class=\"number\">60000</span></span><br><span class=\"line\">            <span class=\"comment\"># 配置一个连接在池中最小生存的时间，单位是毫秒</span></span><br><span class=\"line\">            <span class=\"attr\">minEvictableIdleTimeMillis:</span> <span class=\"number\">300000</span></span><br><span class=\"line\">            <span class=\"comment\"># 配置一个连接在池中最大生存的时间，单位是毫秒</span></span><br><span class=\"line\">            <span class=\"attr\">maxEvictableIdleTimeMillis:</span> <span class=\"number\">900000</span></span><br><span class=\"line\">            <span class=\"comment\"># 配置检测连接是否有效</span></span><br><span class=\"line\">            <span class=\"attr\">validationQuery:</span> <span class=\"string\">SELECT</span> <span class=\"number\">1</span> <span class=\"string\">FROM</span> <span class=\"string\">DUAL</span></span><br><span class=\"line\">            <span class=\"attr\">testWhileIdle:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">            <span class=\"attr\">testOnBorrow:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">            <span class=\"attr\">testOnReturn:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">            <span class=\"attr\">webStatFilter:</span></span><br><span class=\"line\">                <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">            <span class=\"attr\">statViewServlet:</span></span><br><span class=\"line\">                <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">                <span class=\"comment\"># 设置白名单，不填则允许所有访问</span></span><br><span class=\"line\">                <span class=\"attr\">allow:</span></span><br><span class=\"line\">                <span class=\"attr\">url-pattern:</span> <span class=\"string\">/druid/*</span></span><br><span class=\"line\">                <span class=\"comment\"># 控制台管理用户名和密码</span></span><br><span class=\"line\">                <span class=\"attr\">login-username:</span></span><br><span class=\"line\">                <span class=\"attr\">login-password:</span></span><br><span class=\"line\">            <span class=\"attr\">filter:</span></span><br><span class=\"line\">                <span class=\"attr\">stat:</span></span><br><span class=\"line\">                    <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">                    <span class=\"comment\"># 慢SQL记录</span></span><br><span class=\"line\">                    <span class=\"attr\">log-slow-sql:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">                    <span class=\"attr\">slow-sql-millis:</span> <span class=\"number\">1000</span></span><br><span class=\"line\">                    <span class=\"attr\">merge-sql:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">                <span class=\"attr\">wall:</span></span><br><span class=\"line\">                    <span class=\"attr\">config:</span></span><br><span class=\"line\">                        <span class=\"attr\">multi-statement-allow:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">                <span class=\"attr\">config:</span></span><br><span class=\"line\">                    <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">            <span class=\"attr\">connection-properties:</span> <span class=\"string\">config.decrypt=true;config.decrypt.key=$&#123;spring.datasource.publickey&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"方案二：使用jasypt对数据库密码加密\"><a href=\"#方案二：使用jasypt对数据库密码加密\" class=\"headerlink\" title=\"方案二：使用jasypt对数据库密码加密\"></a>方案二：使用jasypt对数据库密码加密</h1><h2 id=\"pom-xml引入jasypt包\"><a href=\"#pom-xml引入jasypt包\" class=\"headerlink\" title=\"pom.xml引入jasypt包\"></a>pom.xml引入jasypt包</h2><figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.ulisesbocchio<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jasypt-spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;jasypt.verison&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"利用jasypt提供的工具类对明文密码进行加密\"><a href=\"#利用jasypt提供的工具类对明文密码进行加密\" class=\"headerlink\" title=\"利用jasypt提供的工具类对明文密码进行加密\"></a>利用jasypt提供的工具类对明文密码进行加密</h2><p>加密工具类如下</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">JasyptEncryptorUtils</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String salt = <span class=\"string\">&quot;lybgeek&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> BasicTextEncryptor basicTextEncryptor = <span class=\"keyword\">new</span> BasicTextEncryptor();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        basicTextEncryptor.setPassword(salt);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">JasyptEncryptorUtils</span><span class=\"params\">()</span></span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 明文加密</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> plaintext</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">encode</span><span class=\"params\">(String plaintext)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;明文字符串：&quot;</span> + plaintext);</span><br><span class=\"line\">        String ciphertext = basicTextEncryptor.encrypt(plaintext);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;加密后字符串：&quot;</span> + ciphertext);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ciphertext;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 解密</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> ciphertext</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">decode</span><span class=\"params\">(String ciphertext)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;加密字符串：&quot;</span> + ciphertext);</span><br><span class=\"line\">        ciphertext = <span class=\"string\">&quot;ENC(&quot;</span> + ciphertext + <span class=\"string\">&quot;)&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (PropertyValueEncryptionUtils.isEncryptedValue(ciphertext))&#123;</span><br><span class=\"line\">            String plaintext = PropertyValueEncryptionUtils.decrypt(ciphertext,basicTextEncryptor);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;解密后的字符串：&quot;</span> + plaintext);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> plaintext;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;解密失败&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"修改数据库的配置文件内容信息-1\"><a href=\"#修改数据库的配置文件内容信息-1\" class=\"headerlink\" title=\"修改数据库的配置文件内容信息\"></a>修改数据库的配置文件内容信息</h2><p><strong>a、</strong> 用ENC包裹用JasyptEncryptorUtils 生成的加密串</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"code\"><pre><span class=\"line\">password: <span class=\"built_in\">$</span>&#123;DATASOURCE<span class=\"built_in\">_</span>PWD:ENC(P8m43qmzqN4c07DCTPey4Q==)&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>b、</strong> 配置密钥和指定加解密算法</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\">jasypt:</span><br><span class=\"line\">    encryptor:</span><br><span class=\"line\">        password: lybgeek</span><br><span class=\"line\">        algorithm: PBEWithMD5AndDES</span><br><span class=\"line\">        iv-generator-classname: org.jasypt.iv.NoIvGenerator</span><br></pre></td></tr></table></figure>\n\n<p>因为工具类使用的是加解密的工具类是BasicTextEncryptor，其对应配置加解密就是PBEWithMD5AndDES和<br>org.jasypt.iv.NoIvGenerator</p>\n<p><strong>ps：</strong> 在生产环境中，建议使用如下方式配置密钥，避免密钥泄露</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">java -jar -Djasypt.encryptor.password=lybgeek</span><br></pre></td></tr></table></figure>\n\n<p><strong>附录：</strong> 完整数据库配置</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">    <span class=\"attr\">datasource:</span></span><br><span class=\"line\">        <span class=\"attr\">type:</span> <span class=\"string\">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class=\"line\">        <span class=\"attr\">driverClassName:</span> <span class=\"string\">com.mysql.cj.jdbc.Driver</span></span><br><span class=\"line\">        <span class=\"attr\">url:</span> <span class=\"string\">$&#123;DATASOURCE_URL:ENC(kT/gwazwzaFNEp7OCbsgCQN7PHRohaTKJNdGVgLsW2cH67zqBVEq7mN0BTIXAeF4/Fvv4l7myLFx0y6ap4umod7C2VWgyRU5UQtKmdwzQN3hxVxktIkrFPn9DM6+YahM0xP+ppO9HaWqA2ral0ejBCvmor3WScJNHCAhI9kHjYc=)&#125;</span></span><br><span class=\"line\">        <span class=\"attr\">username:</span> <span class=\"string\">$&#123;DATASOURCE_USERNAME:ENC(rEQLlqM5nphqnsuPj3MlJw==)&#125;</span></span><br><span class=\"line\">        <span class=\"attr\">password:</span> <span class=\"string\">$&#123;DATASOURCE_PWD:ENC(P8m43qmzqN4c07DCTPey4Q==)&#125;</span></span><br><span class=\"line\">        <span class=\"attr\">druid:</span></span><br><span class=\"line\">            <span class=\"comment\"># 初始连接数</span></span><br><span class=\"line\">            <span class=\"attr\">initialSize:</span> <span class=\"number\">5</span></span><br><span class=\"line\">            <span class=\"comment\"># 最小连接池数量</span></span><br><span class=\"line\">            <span class=\"attr\">minIdle:</span> <span class=\"number\">10</span></span><br><span class=\"line\">            <span class=\"comment\"># 最大连接池数量</span></span><br><span class=\"line\">            <span class=\"attr\">maxActive:</span> <span class=\"number\">20</span></span><br><span class=\"line\">            <span class=\"comment\"># 配置获取连接等待超时的时间</span></span><br><span class=\"line\">            <span class=\"attr\">maxWait:</span> <span class=\"number\">60000</span></span><br><span class=\"line\">            <span class=\"comment\"># 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒</span></span><br><span class=\"line\">            <span class=\"attr\">timeBetweenEvictionRunsMillis:</span> <span class=\"number\">60000</span></span><br><span class=\"line\">            <span class=\"comment\"># 配置一个连接在池中最小生存的时间，单位是毫秒</span></span><br><span class=\"line\">            <span class=\"attr\">minEvictableIdleTimeMillis:</span> <span class=\"number\">300000</span></span><br><span class=\"line\">            <span class=\"comment\"># 配置一个连接在池中最大生存的时间，单位是毫秒</span></span><br><span class=\"line\">            <span class=\"attr\">maxEvictableIdleTimeMillis:</span> <span class=\"number\">900000</span></span><br><span class=\"line\">            <span class=\"comment\"># 配置检测连接是否有效</span></span><br><span class=\"line\">            <span class=\"attr\">validationQuery:</span> <span class=\"string\">SELECT</span> <span class=\"number\">1</span> <span class=\"string\">FROM</span> <span class=\"string\">DUAL</span></span><br><span class=\"line\">            <span class=\"attr\">testWhileIdle:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">            <span class=\"attr\">testOnBorrow:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">            <span class=\"attr\">testOnReturn:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">            <span class=\"attr\">webStatFilter:</span></span><br><span class=\"line\">                <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">            <span class=\"attr\">statViewServlet:</span></span><br><span class=\"line\">                <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">                <span class=\"comment\"># 设置白名单，不填则允许所有访问</span></span><br><span class=\"line\">                <span class=\"attr\">allow:</span></span><br><span class=\"line\">                <span class=\"attr\">url-pattern:</span> <span class=\"string\">/druid/*</span></span><br><span class=\"line\">                <span class=\"comment\"># 控制台管理用户名和密码</span></span><br><span class=\"line\">                <span class=\"attr\">login-username:</span></span><br><span class=\"line\">                <span class=\"attr\">login-password:</span></span><br><span class=\"line\">            <span class=\"attr\">filter:</span></span><br><span class=\"line\">                <span class=\"attr\">stat:</span></span><br><span class=\"line\">                    <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">                    <span class=\"comment\"># 慢SQL记录</span></span><br><span class=\"line\">                    <span class=\"attr\">log-slow-sql:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">                    <span class=\"attr\">slow-sql-millis:</span> <span class=\"number\">1000</span></span><br><span class=\"line\">                    <span class=\"attr\">merge-sql:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">                <span class=\"attr\">wall:</span></span><br><span class=\"line\">                    <span class=\"attr\">config:</span></span><br><span class=\"line\">                        <span class=\"attr\">multi-statement-allow:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">jasypt:</span></span><br><span class=\"line\">    <span class=\"attr\">encryptor:</span></span><br><span class=\"line\">        <span class=\"attr\">password:</span> <span class=\"string\">lybgeek</span></span><br><span class=\"line\">        <span class=\"attr\">algorithm:</span> <span class=\"string\">PBEWithMD5AndDES</span></span><br><span class=\"line\">        <span class=\"attr\">iv-generator-classname:</span> <span class=\"string\">org.jasypt.iv.NoIvGenerator</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"方案三：自定义实现\"><a href=\"#方案三：自定义实现\" class=\"headerlink\" title=\"方案三：自定义实现\"></a>方案三：自定义实现</h1><p><strong>实现原理：</strong> 利用spring后置处理器修改DataSource</p>\n<h2 id=\"自定义加解密工具类\"><a href=\"#自定义加解密工具类\" class=\"headerlink\" title=\"自定义加解密工具类\"></a>自定义加解密工具类</h2><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 利用hutool封装的加解密工具，以AES对称加密算法为例</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">EncryptorUtils</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String secretKey;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        secretKey = Hex.encodeHexString(SecureUtil.generateKey(SymmetricAlgorithm.AES.getValue()).getEncoded());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;secretKey--&gt;&quot;</span> + secretKey);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;--------------------------------------------------------------------------------------&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 明文加密</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> plaintext</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@SneakyThrows</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">encode</span><span class=\"params\">(String plaintext)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;明文字符串：&quot;</span> + plaintext);</span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] key = Hex.decodeHex(secretKey.toCharArray());</span><br><span class=\"line\">        String ciphertext =  SecureUtil.aes(key).encryptHex(plaintext);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;加密后字符串：&quot;</span> + ciphertext);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ciphertext;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 解密</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> ciphertext</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@SneakyThrows</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">decode</span><span class=\"params\">(String ciphertext)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;加密字符串：&quot;</span> + ciphertext);</span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] key = Hex.decodeHex(secretKey.toCharArray());</span><br><span class=\"line\">        String plaintext = SecureUtil.aes(key).decryptStr(ciphertext);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;解密后的字符串：&quot;</span> + plaintext);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> plaintext;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 明文加密</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> plaintext</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@SneakyThrows</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">encode</span><span class=\"params\">(String secretKey,String plaintext)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;明文字符串：&quot;</span> + plaintext);</span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] key = Hex.decodeHex(secretKey.toCharArray());</span><br><span class=\"line\">        String ciphertext =  SecureUtil.aes(key).encryptHex(plaintext);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;加密后字符串：&quot;</span> + ciphertext);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ciphertext;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 解密</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> ciphertext</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@SneakyThrows</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">decode</span><span class=\"params\">(String secretKey,String ciphertext)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;加密字符串：&quot;</span> + ciphertext);</span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] key = Hex.decodeHex(secretKey.toCharArray());</span><br><span class=\"line\">        String plaintext = SecureUtil.aes(key).decryptStr(ciphertext);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;解密后的字符串：&quot;</span> + plaintext);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> plaintext;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"编写后置处理器\"><a href=\"#编写后置处理器\" class=\"headerlink\" title=\"编写后置处理器\"></a>编写后置处理器</h2><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DruidDataSourceEncyptBeanPostProcessor</span> <span class=\"keyword\">implements</span> <span class=\"title\">BeanPostProcessor</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> CustomEncryptProperties customEncryptProperties;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> DataSourceProperties dataSourceProperties;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DruidDataSourceEncyptBeanPostProcessor</span><span class=\"params\">(CustomEncryptProperties customEncryptProperties, DataSourceProperties dataSourceProperties)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.customEncryptProperties = customEncryptProperties;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.dataSourceProperties = dataSourceProperties;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">postProcessBeforeInitialization</span><span class=\"params\">(Object bean, String beanName)</span> <span class=\"keyword\">throws</span> BeansException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(bean <span class=\"keyword\">instanceof</span> DruidDataSource)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(customEncryptProperties.isEnabled())&#123;</span><br><span class=\"line\">                DruidDataSource druidDataSource = (DruidDataSource)bean;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;--------------------------------------------------------------------------------------&quot;</span>);</span><br><span class=\"line\">                String username = dataSourceProperties.getUsername();</span><br><span class=\"line\">                druidDataSource.setUsername(EncryptorUtils.decode(customEncryptProperties.getSecretKey(),username));</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;--------------------------------------------------------------------------------------&quot;</span>);</span><br><span class=\"line\">                String password = dataSourceProperties.getPassword();</span><br><span class=\"line\">                druidDataSource.setPassword(EncryptorUtils.decode(customEncryptProperties.getSecretKey(),password));</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;--------------------------------------------------------------------------------------&quot;</span>);</span><br><span class=\"line\">                String url = dataSourceProperties.getUrl();</span><br><span class=\"line\">                druidDataSource.setUrl(EncryptorUtils.decode(customEncryptProperties.getSecretKey(),url));</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;--------------------------------------------------------------------------------------&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bean;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"修改数据库的配置文件内容信息-2\"><a href=\"#修改数据库的配置文件内容信息-2\" class=\"headerlink\" title=\"修改数据库的配置文件内容信息\"></a>修改数据库的配置文件内容信息</h2><p><strong>a 、</strong> 修改密码</p>\n<p>把密码替换成用自定义加密工具类生成的加密密码</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"code\"><pre><span class=\"line\">password: <span class=\"built_in\">$</span>&#123;DATASOURCE<span class=\"built_in\">_</span>PWD:fb31cdd78a5fa2c43f530b849f1135e7&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>b 、</strong> 指定密钥和开启加密功能</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">custom:</span></span><br><span class=\"line\">    <span class=\"attr\">encrypt:</span></span><br><span class=\"line\">        <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"attr\">secret-key:</span> <span class=\"string\">2f8ba810011e0973728afa3f28a0ecb6</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>ps：</strong> 同理secret-key最好也不要直接暴露在配置文件中，可以用<br>-Dcustom.encrypt.secret-key指定</p>\n<p><strong>附录：</strong> 完整数据库配置</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">    <span class=\"attr\">datasource:</span></span><br><span class=\"line\">        <span class=\"attr\">type:</span> <span class=\"string\">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class=\"line\">        <span class=\"attr\">driverClassName:</span> <span class=\"string\">com.mysql.cj.jdbc.Driver</span></span><br><span class=\"line\">        <span class=\"attr\">url:</span> <span class=\"string\">$&#123;DATASOURCE_URL:dcb268cf3a2626381d2bc5c96f94fb3d7f99352e0e392362cb818a321b0ca61f3a8dad3aeb084242b745c61a1d3dc244ed1484bf745c858c44560dde10e60e90ac65f77ce2926676df7af6b35aefd2bb984ff9a868f1f9052ee9cae5572fa015b66a602f32df39fb1bbc36e04cc0f148e4d610a3e5d54f2eb7c57e4729c9d7b4&#125;</span></span><br><span class=\"line\">        <span class=\"attr\">username:</span> <span class=\"string\">$&#123;DATASOURCE_USERNAME:61db3bf3c6d3fe3ce87549c1af1e9061&#125;</span></span><br><span class=\"line\">        <span class=\"attr\">password:</span> <span class=\"string\">$&#123;DATASOURCE_PWD:fb31cdd78a5fa2c43f530b849f1135e7&#125;</span></span><br><span class=\"line\">        <span class=\"attr\">druid:</span></span><br><span class=\"line\">            <span class=\"comment\"># 初始连接数</span></span><br><span class=\"line\">            <span class=\"attr\">initialSize:</span> <span class=\"number\">5</span></span><br><span class=\"line\">            <span class=\"comment\"># 最小连接池数量</span></span><br><span class=\"line\">            <span class=\"attr\">minIdle:</span> <span class=\"number\">10</span></span><br><span class=\"line\">            <span class=\"comment\"># 最大连接池数量</span></span><br><span class=\"line\">            <span class=\"attr\">maxActive:</span> <span class=\"number\">20</span></span><br><span class=\"line\">            <span class=\"comment\"># 配置获取连接等待超时的时间</span></span><br><span class=\"line\">            <span class=\"attr\">maxWait:</span> <span class=\"number\">60000</span></span><br><span class=\"line\">            <span class=\"comment\"># 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒</span></span><br><span class=\"line\">            <span class=\"attr\">timeBetweenEvictionRunsMillis:</span> <span class=\"number\">60000</span></span><br><span class=\"line\">            <span class=\"comment\"># 配置一个连接在池中最小生存的时间，单位是毫秒</span></span><br><span class=\"line\">            <span class=\"attr\">minEvictableIdleTimeMillis:</span> <span class=\"number\">300000</span></span><br><span class=\"line\">            <span class=\"comment\"># 配置一个连接在池中最大生存的时间，单位是毫秒</span></span><br><span class=\"line\">            <span class=\"attr\">maxEvictableIdleTimeMillis:</span> <span class=\"number\">900000</span></span><br><span class=\"line\">            <span class=\"comment\"># 配置检测连接是否有效</span></span><br><span class=\"line\">            <span class=\"attr\">validationQuery:</span> <span class=\"string\">SELECT</span> <span class=\"number\">1</span> <span class=\"string\">FROM</span> <span class=\"string\">DUAL</span></span><br><span class=\"line\">            <span class=\"attr\">testWhileIdle:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">            <span class=\"attr\">testOnBorrow:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">            <span class=\"attr\">testOnReturn:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">            <span class=\"attr\">webStatFilter:</span></span><br><span class=\"line\">                <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">            <span class=\"attr\">statViewServlet:</span></span><br><span class=\"line\">                <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">                <span class=\"comment\"># 设置白名单，不填则允许所有访问</span></span><br><span class=\"line\">                <span class=\"attr\">allow:</span></span><br><span class=\"line\">                <span class=\"attr\">url-pattern:</span> <span class=\"string\">/druid/*</span></span><br><span class=\"line\">                <span class=\"comment\"># 控制台管理用户名和密码</span></span><br><span class=\"line\">                <span class=\"attr\">login-username:</span></span><br><span class=\"line\">                <span class=\"attr\">login-password:</span></span><br><span class=\"line\">            <span class=\"attr\">filter:</span></span><br><span class=\"line\">                <span class=\"attr\">stat:</span></span><br><span class=\"line\">                    <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">                    <span class=\"comment\"># 慢SQL记录</span></span><br><span class=\"line\">                    <span class=\"attr\">log-slow-sql:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">                    <span class=\"attr\">slow-sql-millis:</span> <span class=\"number\">1000</span></span><br><span class=\"line\">                    <span class=\"attr\">merge-sql:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">                <span class=\"attr\">wall:</span></span><br><span class=\"line\">                    <span class=\"attr\">config:</span></span><br><span class=\"line\">                        <span class=\"attr\">multi-statement-allow:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">custom:</span></span><br><span class=\"line\">    <span class=\"attr\">encrypt:</span></span><br><span class=\"line\">        <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"attr\">secret-key:</span> <span class=\"string\">2f8ba810011e0973728afa3f28a0ecb6</span></span><br></pre></td></tr></table></figure>\n\n","categories":["java"],"tags":["spring","java"]},{"title":"Java应用迁移到容器后会出现OOM","url":"/2021/07/17/java/container/Java%E5%BA%94%E7%94%A8%E8%BF%81%E7%A7%BB%E5%88%B0%E5%AE%B9%E5%99%A8%E5%90%8E%E4%BC%9A%E5%87%BA%E7%8E%B0OOM/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>JVM启动后默认将最大使用堆大小设置为物理内存的四分之一，譬如一台普通的x86服务器配置128G内存，那么启动在容器的内启动JVM会将自己最大允许使用的堆内存调整为32G内存，如果容器启动时设置JVM只允许使用4G大小的内存，那么当JVM使用内存超过4G后，将会导致内核杀死JVM。</p>\n<p>JAVA 10版本后，已经原生支持容器环境,最大堆调整到内存限制的四分之一，而非物理内存的四分之一。还可以支持CPU自适应。</p>\n<span id=\"more\"></span>\n\n<p>#测试及配置</p>\n<p>测试代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> JAVA.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> JAVA.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MemEat</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        List l = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">byte</span> b[] = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1048576</span>];</span><br><span class=\"line\">            l.add(b);</span><br><span class=\"line\">            Runtime rt = Runtime.getRuntime();</span><br><span class=\"line\">            System.out.println( <span class=\"string\">&quot;free memory: &quot;</span> + rt.freeMemory() );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>代码非常简单，只是通过一个死循环不停地申请内存，如果是在JAVA 8u111版本之前，直接通过<strong>docker run -m 100m</strong>限制使用100M内存的情况下，运行一段时间后直接被内核杀死。输出如下：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"params\">#</span> JAVA MemEat</span><br><span class=\"line\">. . .</span><br><span class=\"line\">free memory: 1307309488</span><br><span class=\"line\">free memory: 1306260896</span><br><span class=\"line\">free memory: 1305212304</span><br><span class=\"line\">free memory: 1304163712</span><br><span class=\"line\">free memory: 1303115120</span><br><span class=\"line\">Killed</span><br></pre></td></tr></table></figure>\n\n<p>为了避免这种情况，可以通过“ -Xmx ”设置最大堆内存后再次运行</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"params\">#</span> JAVA -Xmx100m MemEat</span><br><span class=\"line\">. . .</span><br><span class=\"line\">free memory: 8382264</span><br><span class=\"line\">free memory: 7333672</span><br><span class=\"line\">free memory: 6285080</span><br><span class=\"line\">free memory: 5236488</span><br><span class=\"line\">Exception in thread &quot;main&quot; JAVA.lang.OutOfMemoryError: JAVA heap space MemEat.main(MemEat.JAVA:8)</span><br></pre></td></tr></table></figure>\n\n<p>可以看到JVM由于堆内存不足，自己退出了。这种在JVM添加参数的方式有个弊端：如果修改了容器的内存限制，还需要调整启动参数。为此在JAVA 8u144版本之后添加了动态调整的功能，能够根据用户设定的内存限制动态调整，启动参数如下：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"params\">#</span> JAVA -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap MemEat</span><br></pre></td></tr></table></figure>\n\n<p>当修改了内存参数后JVM便可以随之调整。JAVA对于容器的支持不断增强到最新的JAVA 10版本后，已经原生支持容器环境，无需添加任何参数。不仅如此，新版JAVA 10还支持CPU在容器内动态调整。如下所示JVM调整内存最大堆：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># docker  run -it -m 1024M --entrypoint bash openjdk:11-jdk   </span></span><br><span class=\"line\"><span class=\"comment\"># java -XX:+PrintFlagsFinal -version | grep MaxHeapSize</span></span><br><span class=\"line\">  size_t MaxHeapSize = 268435456 </span><br></pre></td></tr></table></figure>\n\n<p>可以看到上面的最大堆调整到内存限制的四分之一，而非物理内存的四分之一。还可以支持CPU自适应，如下所示：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># docker  run -it --CPUs 2 ---entrypoint bash openjdk:11-jdk</span></span><br><span class=\"line\">jshell&gt; Runtime.getRuntime().availableProcessors()</span><br><span class=\"line\"><span class=\"variable\">$1</span> ==&gt; 2</span><br></pre></td></tr></table></figure>\n\n<p>可以看到通过JAVA的API成功地获取到当前设置的CPU个数。</p>\n<p>如果是其他编程语言希望获取到容器的CPU和内存限制，可以通过容器内的cgroup文件系统，如获取容器内存的限制：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># cat /sys/fs/cgroup/memory/memory.limit_in_bytes</span></span><br><span class=\"line\">104857600</span><br></pre></td></tr></table></figure>","categories":["java"],"tags":["java","container"]}]